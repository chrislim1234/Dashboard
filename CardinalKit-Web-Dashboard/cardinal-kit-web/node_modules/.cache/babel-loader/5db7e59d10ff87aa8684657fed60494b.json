{"ast":null,"code":"import breadCrumb from \"@/components/breadcrumb.vue\";\nimport { mapGetters } from 'vuex';\nimport store from \"@/store\";\nexport default {\n  name: \"StudyDetail\",\n  components: {\n    breadCrumb\n  },\n\n  data() {\n    return {\n      path: [{\n        label: \"Health Categories\",\n        name: \"categories\"\n      }, {\n        label: \"Activity\",\n        name: \"category\",\n        param: \"categoryId\"\n      }, {\n        label: \"Statistics\",\n        name: \"statistic\"\n      }]\n    };\n  },\n\n  methods: {},\n  computed: { ...mapGetters('patient', ['getHealthData']),\n\n    getActivityIndexData() {\n      return \",\";\n    },\n\n    breadCrumb() {\n      let index = this.path.findIndex(obj => obj.active);\n      return this.path.slice(0, index + 1);\n    }\n\n  },\n\n  created() {\n    let path = localStorage.getItem(\"path\");\n\n    if (path) {\n      this.path = JSON.parse(path);\n    }\n  },\n\n  beforeRouteEnter(to, from, next) {\n    console.log(\"enter\");\n    Promise.all([store.dispatch(\"patient/FecthCategoryWithData\", {\n      studyId: `${to.query.studyId}`,\n      userId: `${to.query.userId}`\n    }), store.dispatch(\"patient/FetchMetricsData\", {\n      studyId: `${to.query.studyId}`,\n      userId: `${to.query.userId}`\n    })]).then(() => {\n      let path = JSON.parse(localStorage.getItem(\"path\"));\n\n      if (path == null) {\n        path = [{\n          label: \"Health Categories\",\n          name: \"categories\"\n        }, {\n          label: \"Activity\",\n          name: \"category\",\n          param: \"categoryId\"\n        }, {\n          label: \"Statistics\",\n          name: \"statistic\"\n        }];\n      }\n\n      if (path != null) {\n        console.log(\"path\", path);\n        path.forEach(obj => {\n          console.log(to.name, \"name\");\n          obj.active = obj.name === to.name;\n\n          if (obj.param && to.params && obj.active) {\n            obj.params = to.params;\n            obj.label = to.params[obj.param];\n          }\n\n          return obj;\n        });\n        console.log(\"finalpath\", path);\n        localStorage.setItem(\"path\", JSON.stringify(path));\n      }\n\n      next();\n    });\n  },\n\n  beforeRouteUpdate(to, from, next) {\n    console.log(\"updated\");\n    this.path.forEach(obj => {\n      obj.active = obj.name === to.name;\n\n      if (obj.param && to.params && obj.active) {\n        obj.params = to.params;\n        obj.label = to.params[obj.param];\n      }\n\n      return obj;\n    });\n    localStorage.setItem(\"path\", JSON.stringify(this.path));\n    this.path = [...this.path];\n    next();\n  }\n\n};","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/views/patients/healthKit/healthKitUser.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <bread-crumb \n      :data=\"breadCrumb\"\n      :userId=\"$route.query.userId\"\n      :studyId=\"$route.query.studyId\">\n    </bread-crumb>\n\n    <router-view></router-view>\n\n  </div>\n</template>\n\n<script>\nimport breadCrumb from \"@/components/breadcrumb.vue\"\nimport { mapGetters } from 'vuex';\nimport store from \"@/store\";\nexport default {\n  name: \"StudyDetail\",\n  components:{\n    breadCrumb,\n  },\n  data(){\n    return{\n      path: [\n        {label: \"Health Categories\", name: \"categories\"},\n        {label: \"Activity\", name:\"category\", param: \"categoryId\"},\n        {label: \"Statistics\", name: \"statistic\"},\n      ]\n    }\n  },\n  methods: {},\n  computed:{\n    ...mapGetters('patient',['getHealthData']),\n    getActivityIndexData(){\n      return \",\"\n    },\n    breadCrumb(){\n      let index = this.path.findIndex((obj) => obj.active)\n      return  this.path.slice(0, index+1);\n    }\n  },\n  created(){\n    let path = localStorage.getItem(\"path\");\n    if (path){\n      this.path = JSON.parse(path);\n    }\n   \n  },\n  beforeRouteEnter(to, from, next) {\n    console.log(\"enter\")\n    Promise.all([\n      store.dispatch(\"patient/FecthCategoryWithData\", {\n        studyId: `${to.query.studyId}`,\n        userId: `${to.query.userId}`\n      }),\n      store.dispatch(\"patient/FetchMetricsData\",{\n        studyId: `${to.query.studyId}`,\n        userId: `${to.query.userId}`\n      })\n    ]).then(() => {\n       let path = JSON.parse(localStorage.getItem(\"path\"));\n       if(path == null){\n         path = [\n          {label: \"Health Categories\", name: \"categories\"},\n          {label: \"Activity\", name:\"category\", param: \"categoryId\"},\n          {label: \"Statistics\", name: \"statistic\"},\n        ]\n       }\n       if(path!=null){\n        console.log(\"path\",path)\n          path.forEach(obj => {\n            console.log(to.name,\"name\")\n          obj.active = obj.name === to.name;\n          if (obj.param && to.params && obj.active){  \n            obj.params = to.params\n            obj.label = to.params[obj.param]\n          }\n          return obj\n        });\n        console.log(\"finalpath\",path)\n        localStorage.setItem(\"path\", JSON.stringify(path))\n      }\n      next();\n    });\n  },\n  beforeRouteUpdate(to, from, next) {\n    console.log(\"updated\")\n    this.path.forEach(obj => {\n      obj.active = obj.name === to.name;\n      if (obj.param && to.params && obj.active){  \n        obj.params = to.params\n        obj.label = to.params[obj.param]\n      }\n      return obj\n    });\n    localStorage.setItem(\"path\", JSON.stringify(this.path))\n    this.path = [...this.path]\n    next();\n  }\n};\n</script>\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}