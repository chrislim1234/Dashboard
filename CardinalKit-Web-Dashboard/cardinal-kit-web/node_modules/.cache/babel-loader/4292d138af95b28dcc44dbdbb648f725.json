{"ast":null,"code":"import { FetchQuantityData, FetchLastQuantityData } from \"../../index\";\nexport const FetchLastBodyData = async ({\n  commit\n}, payload) => {\n  let data = await Promise.all([FetchLastQuantityData(\"HKQuantityTypeIdentifierBasalBodyTemperature\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierBodyFatPercentage\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierLeanBodyMass\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierBodyTemperature\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierBodyMass\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierBodyMassIndex\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierElectrodermalActivity\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierHeight\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierWaistCircumference\", { ...payload,\n    limit: 1\n  })]);\n  commit(\"saveLastCategoryData\", {\n    category: payload.category,\n    data: data\n  });\n  return {\n    \"name\": \"body\",\n    \"data\": data.filter(e => e && e.length > 0)\n  };\n};","map":{"version":3,"names":["FetchQuantityData","FetchLastQuantityData","FetchLastBodyData","commit","payload","data","Promise","all","limit","category","filter","e","length"],"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/store/modules/patient/HealthData/BodyMeasurements/actions.js"],"sourcesContent":["import {\n  FetchQuantityData,\n  FetchLastQuantityData\n} from \"../../index\";\n\nexport const FetchLastBodyData = async ({ commit }, payload) => {\n  let data = await Promise.all([\n    FetchLastQuantityData(\"HKQuantityTypeIdentifierBasalBodyTemperature\", {...payload,limit: 1,}),\n    FetchLastQuantityData(\"HKQuantityTypeIdentifierBodyFatPercentage\", {...payload,limit: 1,}),\n    FetchLastQuantityData(\"HKQuantityTypeIdentifierLeanBodyMass\", {...payload,limit: 1,}),\n    FetchLastQuantityData(\"HKQuantityTypeIdentifierBodyTemperature\", {...payload,limit: 1,}),\n    FetchLastQuantityData(\"HKQuantityTypeIdentifierBodyMass\", {...payload,limit: 1,}),\n    FetchLastQuantityData(\"HKQuantityTypeIdentifierBodyMassIndex\", {...payload,limit: 1,}),\n    FetchLastQuantityData(\"HKQuantityTypeIdentifierElectrodermalActivity\", {...payload,limit: 1,}),\n    FetchLastQuantityData(\"HKQuantityTypeIdentifierHeight\", {...payload,limit: 1,}),\n    FetchLastQuantityData(\"HKQuantityTypeIdentifierWaistCircumference\", {...payload,limit: 1,}),\n  ])\n  commit(\"saveLastCategoryData\", {\n    category: payload.category,\n    data: data\n  });\n  return {\"name\":\"body\",\"data\":data.filter(e => (e && e.length>0))}\n};"],"mappings":"AAAA,SACEA,iBADF,EAEEC,qBAFF,QAGO,aAHP;AAKA,OAAO,MAAMC,iBAAiB,GAAG,OAAO;EAAEC;AAAF,CAAP,EAAmBC,OAAnB,KAA+B;EAC9D,IAAIC,IAAI,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,CAC3BN,qBAAqB,CAAC,8CAAD,EAAiD,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAAjD,CADM,EAE3BP,qBAAqB,CAAC,2CAAD,EAA8C,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAA9C,CAFM,EAG3BP,qBAAqB,CAAC,sCAAD,EAAyC,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAAzC,CAHM,EAI3BP,qBAAqB,CAAC,yCAAD,EAA4C,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAA5C,CAJM,EAK3BP,qBAAqB,CAAC,kCAAD,EAAqC,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAArC,CALM,EAM3BP,qBAAqB,CAAC,uCAAD,EAA0C,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAA1C,CANM,EAO3BP,qBAAqB,CAAC,+CAAD,EAAkD,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAAlD,CAPM,EAQ3BP,qBAAqB,CAAC,gCAAD,EAAmC,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAAnC,CARM,EAS3BP,qBAAqB,CAAC,4CAAD,EAA+C,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAA/C,CATM,CAAZ,CAAjB;EAWAL,MAAM,CAAC,sBAAD,EAAyB;IAC7BM,QAAQ,EAAEL,OAAO,CAACK,QADW;IAE7BJ,IAAI,EAAEA;EAFuB,CAAzB,CAAN;EAIA,OAAO;IAAC,QAAO,MAAR;IAAe,QAAOA,IAAI,CAACK,MAAL,CAAYC,CAAC,IAAKA,CAAC,IAAIA,CAAC,CAACC,MAAF,GAAS,CAAhC;EAAtB,CAAP;AACD,CAjBM"},"metadata":{},"sourceType":"module"}