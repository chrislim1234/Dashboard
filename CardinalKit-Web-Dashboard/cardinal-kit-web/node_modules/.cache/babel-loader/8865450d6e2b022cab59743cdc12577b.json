{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Min: \", -1);\n\nconst _hoisted_2 = [\"name\"];\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Max: \", -1);\n\nconst _hoisted_4 = [\"name\"];\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", null, \"maxFractionDigits: \", -1);\n\nconst _hoisted_6 = [\"name\"];\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Unit: \", -1);\n\nconst _hoisted_8 = [\"name\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $props.Options.min = $event),\n    name: `options[${$props.Options.id}]`,\n    type: \"number\",\n    class: _normalizeClass([\"TextInput\", $options.classError('min')]),\n    placeholder: \"1\",\n    min: \"0\"\n  }, null, 10, _hoisted_2), [[_vModelText, $props.Options.min]]), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $props.Options.max = $event),\n    name: `options[${$props.Options.id}]`,\n    type: \"number\",\n    class: _normalizeClass([\"TextInput\", $options.classError('max')]),\n    placeholder: \"1\",\n    min: \"0\"\n  }, null, 10, _hoisted_4), [[_vModelText, $props.Options.max]]), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $props.Options.maxFractionDigits = $event),\n    name: `options[${$props.Options.id}]`,\n    type: \"number\",\n    class: _normalizeClass([\"TextInput\", $options.classError('maxFraction')]),\n    placeholder: \"1\",\n    min: \"0\"\n  }, null, 10, _hoisted_6), [[_vModelText, $props.Options.maxFractionDigits]]), _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $props.Options.unit = $event),\n    name: `options[${$props.Options.id}]`,\n    type: \"text\",\n    class: _normalizeClass([\"TextInput\", $options.classError('unit')]),\n    placeholder: \"meters\"\n  }, null, 10, _hoisted_8), [[_vModelText, $props.Options.unit]])]);\n}","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/surveys/SurveyBuilder/questionsTypes/Integer.vue"],"names":[],"mappings":";;gCAEI,mBAAA,CAAoB,OAApB,EAAoB,IAApB,EAAO,OAAP,EAAY,CAAA,CAAZ,C;;;;gCAUE,mBAAA,CAAoB,OAApB,EAAoB,IAApB,EAAO,OAAP,EAAY,CAAA,CAAZ,C;;;;gCAUA,mBAAA,CAAkC,OAAlC,EAAkC,IAAlC,EAAO,qBAAP,EAA0B,CAAA,CAA1B,C;;;;gCAUA,mBAAA,CAAqB,OAArB,EAAqB,IAArB,EAAO,QAAP,EAAa,CAAA,CAAb,C;;;;uBA/BN,mBAAA,CAwCM,KAxCN,EAwCM,IAxCN,EAwCM,CAvCF,UAuCE,E,gBAtCA,mBAAA,CAQE,OARF,EAQE;+DAPS,MAAA,CAAA,OAAA,CAAQ,G,GAAG,M,CAOpB;IANC,IAAI,EAAA,WAAa,MAAA,CAAA,OAAA,CAAQ,EAAE,GAM5B;IALA,IAAI,EAAC,QAKL;IAJA,KAAK,EAAA,eAAA,CAAA,CAAC,WAAD,EAGG,QAAA,CAAA,UAAA,CAAU,KAAV,CAHH,CAAA,CAIL;IAHA,WAAW,EAAC,GAGZ;IAFA,GAAG,EAAC;EAEJ,CARF,E,IAAA,E,EAAA,E,UAAA,C,iBACW,MAAA,CAAA,OAAA,CAAQ,G,GAqCnB,EA7BA,UA6BA,E,gBA5BA,mBAAA,CAQE,OARF,EAQE;+DAPS,MAAA,CAAA,OAAA,CAAQ,G,GAAG,M,CAOpB;IANC,IAAI,EAAA,WAAa,MAAA,CAAA,OAAA,CAAQ,EAAE,GAM5B;IALA,IAAI,EAAC,QAKL;IAJA,KAAK,EAAA,eAAA,CAAA,CAAC,WAAD,EAGG,QAAA,CAAA,UAAA,CAAU,KAAV,CAHH,CAAA,CAIL;IAHA,WAAW,EAAC,GAGZ;IAFA,GAAG,EAAC;EAEJ,CARF,E,IAAA,E,EAAA,E,UAAA,C,iBACW,MAAA,CAAA,OAAA,CAAQ,G,GA2BnB,EAnBA,UAmBA,E,gBAlBA,mBAAA,CAQE,OARF,EAQE;+DAPS,MAAA,CAAA,OAAA,CAAQ,iB,GAAiB,M,CAOlC;IANC,IAAI,EAAA,WAAa,MAAA,CAAA,OAAA,CAAQ,EAAE,GAM5B;IALA,IAAI,EAAC,QAKL;IAJA,KAAK,EAAA,eAAA,CAAA,CAAC,WAAD,EAGG,QAAA,CAAA,UAAA,CAAU,aAAV,CAHH,CAAA,CAIL;IAHA,WAAW,EAAC,GAGZ;IAFA,GAAG,EAAC;EAEJ,CARF,E,IAAA,E,EAAA,E,UAAA,C,iBACW,MAAA,CAAA,OAAA,CAAQ,iB,GAiBnB,EATA,UASA,E,gBARA,mBAAA,CAOE,OAPF,EAOE;+DANS,MAAA,CAAA,OAAA,CAAQ,I,GAAI,M,CAMrB;IALC,IAAI,EAAA,WAAa,MAAA,CAAA,OAAA,CAAQ,EAAE,GAK5B;IAJA,IAAI,EAAC,MAIL;IAHA,KAAK,EAAA,eAAA,CAAA,CAAC,WAAD,EAEG,QAAA,CAAA,UAAA,CAAU,MAAV,CAFH,CAAA,CAGL;IAFA,WAAW,EAAC;EAEZ,CAPF,E,IAAA,E,EAAA,E,UAAA,C,iBACW,MAAA,CAAA,OAAA,CAAQ,I,GAOnB,CAxCN,C","sourcesContent":["<template>\n<div>\n    <label>Min: </label>\n      <input\n        v-model=\"Options.min\"\n        :name=\"`options[${Options.id}]`\"\n        type=\"number\"\n        class=\"TextInput\"\n        placeholder=\"1\"\n        min=\"0\"\n        :class=\"classError('min')\"        \n      />\n      <label>Max: </label>\n      <input\n        v-model=\"Options.max\"\n        :name=\"`options[${Options.id}]`\"\n        type=\"number\"\n        class=\"TextInput\"\n        placeholder=\"1\"\n        min=\"0\"\n        :class=\"classError('max')\"\n      />\n      <label>maxFractionDigits: </label>\n      <input\n        v-model=\"Options.maxFractionDigits\"\n        :name=\"`options[${Options.id}]`\"\n        type=\"number\"\n        class=\"TextInput\"\n        placeholder=\"1\"\n        min=\"0\"\n        :class=\"classError('maxFraction')\"\n      />\n      <label>Unit: </label>\n      <input\n        v-model=\"Options.unit\"\n        :name=\"`options[${Options.id}]`\"\n        type=\"text\"\n        class=\"TextInput\"\n        placeholder=\"meters\"\n        :class=\"classError('unit')\"\n      />\n</div>\n</template>\n\n<script>\nexport default {\n  props: {\n    Options: Object\n  },\n  data:() => ({\n    errors:{}\n  }),\n  methods:{\n    classError(value){\n      if(this.errors[value]){\n        return \"TextInput input-no-value-style\"\n      }\n      return \"TextInput\"\n    },\n    checkQuestion(){\n      this.errors={}\n      let error = false\n      let msg = \"\"\n\n      if(this.Options.min == \"\" || this.Options.max == \"\" || this.Options.maxFractionDigits == \"\" || this.Options.unit == \"\"){\n        error = true\n        msg = \"The fields can't be blank\"        \n        this.errors['min']=this.Options.min==\"\"\n        this.errors['max']=this.Options.max==\"\"\n        this.errors['maxFraction']=this.Options.maxFractionDigits==\"\"\n        this.errors['unit']=this.Options.unit==\"\"\n        console.log(\"errors\",this.Options)\n\n      }\n      else{\n        let min = parseInt(this.Options.min)\n        let max = parseInt(this.Options.max)\n\n        if(min>max){\n          error = true \n          msg = \"Min value must be lower than max value\"\n\n          this.errors['min']=true\n\n        }\n      }\n      return {\"error\":error,\"msg\":msg};\n    }\n  }\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}