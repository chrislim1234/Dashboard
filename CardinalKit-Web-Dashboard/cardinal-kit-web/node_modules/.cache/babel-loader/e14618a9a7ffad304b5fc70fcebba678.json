{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { initialState } from \"./index\";\n// export function RESET(state) {\n//   const newState = initialState();\n//   Object.keys(newState).forEach((key) => {\n//     state[key] = newState[key];\n//   });\n// }\nimport { transformAppleCode, transformHealthDataToGlobalFormat } from \"@/common/helpers/healthKit\";\nexport function saveHealthData(state, payload) {\n  let healthData = {};\n  payload.forEach(record => {\n    Object.keys(record).forEach(key => {\n      let keyCode = \"\";\n      let name = \"\";\n\n      if (record[key].code) {\n        keyCode = record[key].code.coding[0].code;\n        name = record[key].code.coding[0].display;\n      } else if (record[key].category) {\n        keyCode = record[key].category[0].type;\n        name = record[key].category[0].type;\n      } else if (record[key].component) {\n        keyCode = record[key].component[0].valueCodeableConcept.text;\n        name = keyCode;\n      } else {\n        console.log(\"record sin category \", record[key]);\n      }\n\n      if (!(keyCode in healthData)) {\n        healthData[keyCode] = {\n          name: name,\n          code: keyCode,\n          data: []\n        };\n      }\n\n      healthData[keyCode].data.push(record[key]);\n    });\n  });\n  state.healthData = healthData;\n} ///TODO REVIEW THIS METHOD\n\nexport function saveActivityData(state, payload) {\n  console.log(\"CALL OTHER???\", payload);\n}\nexport function saveLastActivityData(state, payload) {\n  let activityData = {};\n  let activityDataWebFormat = [];\n  payload.forEach(type => {\n    if (type.length > 0) {\n      activityDataWebFormat.push(transformHealthDataToGlobalFormat(type[0]));\n    }\n  });\n  state.activityData = activityData;\n  state.activityDataWebFormat = activityDataWebFormat;\n}","map":{"version":3,"names":["transformAppleCode","transformHealthDataToGlobalFormat","saveHealthData","state","payload","healthData","forEach","record","Object","keys","key","keyCode","name","code","coding","display","category","type","component","valueCodeableConcept","text","console","log","data","push","saveActivityData","saveLastActivityData","activityData","activityDataWebFormat","length"],"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/store/modules/patient/HealthData/Activity/mutations.js"],"sourcesContent":["// import { initialState } from \"./index\";\n\n// export function RESET(state) {\n//   const newState = initialState();\n//   Object.keys(newState).forEach((key) => {\n//     state[key] = newState[key];\n//   });\n// }\n\nimport { transformAppleCode,transformHealthDataToGlobalFormat } from \"@/common/helpers/healthKit\"\n\nexport function saveHealthData(state, payload) {\n  let healthData = {};\n  payload.forEach((record) => {\n    Object.keys(record).forEach((key) => {\n      let keyCode = \"\";\n      let name = \"\";\n      if (record[key].code) {\n        keyCode = record[key].code.coding[0].code;\n        name = record[key].code.coding[0].display;\n      } else if (record[key].category) {\n        keyCode = record[key].category[0].type;\n        name = record[key].category[0].type;\n      } else if (record[key].component) {\n        keyCode = record[key].component[0].valueCodeableConcept.text;\n        name = keyCode;\n      } else {\n        console.log(\"record sin category \", record[key]);\n      }\n\n      if (!(keyCode in healthData)) {\n        healthData[keyCode] = {\n          name: name,\n          code: keyCode,\n          data: [],\n        };\n      }\n      healthData[keyCode].data.push(record[key]);\n    });\n  });\n  state.healthData = healthData;\n}\n\n\n///TODO REVIEW THIS METHOD\nexport function saveActivityData(state, payload) {\n  console.log(\"CALL OTHER???\", payload);\n}\n\n\n\nexport function saveLastActivityData(state, payload) {\n  let activityData = {};\n  let activityDataWebFormat = [];\n  payload.forEach((type) => {\n    if (type.length > 0) {\n      activityDataWebFormat.push(transformHealthDataToGlobalFormat(type[0]))\n    }\n  });\n  state.activityData = activityData;\n  state.activityDataWebFormat = activityDataWebFormat;\n}\n"],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,kBAAT,EAA4BC,iCAA5B,QAAqE,4BAArE;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,OAA/B,EAAwC;EAC7C,IAAIC,UAAU,GAAG,EAAjB;EACAD,OAAO,CAACE,OAAR,CAAiBC,MAAD,IAAY;IAC1BC,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBD,OAApB,CAA6BI,GAAD,IAAS;MACnC,IAAIC,OAAO,GAAG,EAAd;MACA,IAAIC,IAAI,GAAG,EAAX;;MACA,IAAIL,MAAM,CAACG,GAAD,CAAN,CAAYG,IAAhB,EAAsB;QACpBF,OAAO,GAAGJ,MAAM,CAACG,GAAD,CAAN,CAAYG,IAAZ,CAAiBC,MAAjB,CAAwB,CAAxB,EAA2BD,IAArC;QACAD,IAAI,GAAGL,MAAM,CAACG,GAAD,CAAN,CAAYG,IAAZ,CAAiBC,MAAjB,CAAwB,CAAxB,EAA2BC,OAAlC;MACD,CAHD,MAGO,IAAIR,MAAM,CAACG,GAAD,CAAN,CAAYM,QAAhB,EAA0B;QAC/BL,OAAO,GAAGJ,MAAM,CAACG,GAAD,CAAN,CAAYM,QAAZ,CAAqB,CAArB,EAAwBC,IAAlC;QACAL,IAAI,GAAGL,MAAM,CAACG,GAAD,CAAN,CAAYM,QAAZ,CAAqB,CAArB,EAAwBC,IAA/B;MACD,CAHM,MAGA,IAAIV,MAAM,CAACG,GAAD,CAAN,CAAYQ,SAAhB,EAA2B;QAChCP,OAAO,GAAGJ,MAAM,CAACG,GAAD,CAAN,CAAYQ,SAAZ,CAAsB,CAAtB,EAAyBC,oBAAzB,CAA8CC,IAAxD;QACAR,IAAI,GAAGD,OAAP;MACD,CAHM,MAGA;QACLU,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCf,MAAM,CAACG,GAAD,CAA1C;MACD;;MAED,IAAI,EAAEC,OAAO,IAAIN,UAAb,CAAJ,EAA8B;QAC5BA,UAAU,CAACM,OAAD,CAAV,GAAsB;UACpBC,IAAI,EAAEA,IADc;UAEpBC,IAAI,EAAEF,OAFc;UAGpBY,IAAI,EAAE;QAHc,CAAtB;MAKD;;MACDlB,UAAU,CAACM,OAAD,CAAV,CAAoBY,IAApB,CAAyBC,IAAzB,CAA8BjB,MAAM,CAACG,GAAD,CAApC;IACD,CAxBD;EAyBD,CA1BD;EA2BAP,KAAK,CAACE,UAAN,GAAmBA,UAAnB;AACD,C,CAGD;;AACA,OAAO,SAASoB,gBAAT,CAA0BtB,KAA1B,EAAiCC,OAAjC,EAA0C;EAC/CiB,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BlB,OAA7B;AACD;AAID,OAAO,SAASsB,oBAAT,CAA8BvB,KAA9B,EAAqCC,OAArC,EAA8C;EACnD,IAAIuB,YAAY,GAAG,EAAnB;EACA,IAAIC,qBAAqB,GAAG,EAA5B;EACAxB,OAAO,CAACE,OAAR,CAAiBW,IAAD,IAAU;IACxB,IAAIA,IAAI,CAACY,MAAL,GAAc,CAAlB,EAAqB;MACnBD,qBAAqB,CAACJ,IAAtB,CAA2BvB,iCAAiC,CAACgB,IAAI,CAAC,CAAD,CAAL,CAA5D;IACD;EACF,CAJD;EAKAd,KAAK,CAACwB,YAAN,GAAqBA,YAArB;EACAxB,KAAK,CAACyB,qBAAN,GAA8BA,qBAA9B;AACD"},"metadata":{},"sourceType":"module"}