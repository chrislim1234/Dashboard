{"ast":null,"code":"import Multiselect from \"@vueform/multiselect\";\nexport default {\n  components: {\n    Multiselect\n  },\n\n  data() {\n    return {\n      internalValue: null\n    };\n  },\n\n  methods: {\n    setNewValue(newValue) {\n      this.internalValue = newValue;\n    }\n\n  },\n  watch: {\n    internalValue: function (value) {\n      this.$emit('update:modelValue', value);\n      if (this.onChange) this.onChange();\n    }\n  },\n  computed: {\n    _placeholder() {\n      return this.placeholder ?? \"Select One\";\n    }\n\n  },\n  props: {\n    options: {\n      type: Array,\n      require: true\n    },\n    placeholder: {\n      type: String,\n      require: false\n    },\n    onChange: {\n      type: Function,\n      require: false\n    },\n    defaultValue: {\n      type: String,\n      require: false\n    },\n    disabledSelect: {\n      type: Boolean,\n      require: false,\n      default: () => false\n    }\n  },\n\n  created() {\n    if (this.defaultValue) {\n      this.internalValue = this.defaultValue;\n    }\n  }\n\n};","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/multiSelect/Select.vue"],"names":[],"mappings":"AAgBA,OAAO,WAAP,MAAwB,sBAAxB;AACA,eAAe;EACb,UAAU,EAAE;IAAE;EAAF,CADC;;EAEb,IAAI,GAAG;IACL,OAAO;MACL,aAAa,EAAE;IADV,CAAP;EAGD,CANY;;EAOb,OAAO,EAAC;IACN,WAAW,CAAC,QAAD,EAAU;MACnB,KAAK,aAAL,GAAqB,QAArB;IACF;;EAHM,CAPK;EAYb,KAAK,EAAE;IACL,aAAa,EAAE,UAAS,KAAT,EAAe;MAC5B,KAAK,KAAL,CAAW,mBAAX,EAAgC,KAAhC;MACA,IAAG,KAAK,QAAR,EAAkB,KAAK,QAAL;IACpB;EAJK,CAZM;EAkBb,QAAQ,EAAE;IACR,YAAY,GAAG;MACb,OAAO,KAAK,WAAL,IAAkB,YAAzB;IACF;;EAHQ,CAlBG;EAuBb,KAAK,EAAE;IACL,OAAO,EAAE;MACP,IAAI,EAAC,KADE;MAEP,OAAO,EAAC;IAFD,CADJ;IAKL,WAAW,EAAE;MACX,IAAI,EAAC,MADM;MAEX,OAAO,EAAC;IAFG,CALR;IASL,QAAQ,EAAE;MACR,IAAI,EAAC,QADG;MAER,OAAO,EAAC;IAFA,CATL;IAaL,YAAY,EAAC;MACX,IAAI,EAAE,MADK;MAEX,OAAO,EAAE;IAFE,CAbR;IAiBL,cAAc,EAAE;MACd,IAAI,EAAE,OADQ;MAEd,OAAO,EAAE,KAFK;MAGd,OAAO,EAAE,MAAM;IAHD;EAjBX,CAvBM;;EA8Cb,OAAO,GAAE;IACP,IAAI,KAAK,YAAT,EAAsB;MACpB,KAAK,aAAL,GAAqB,KAAK,YAA1B;IACF;EACF;;AAlDa,CAAf","sourcesContent":["<template>\n  <div>\n    <Multiselect  \n      :searchable=\"true\"\n      :disabled=\"disabledSelect\"\n      trackBy=\"id\"\n      label=\"name\"\n      v-model=\"internalValue\" \n      :options=\"options\" \n      :placeholder=\"_placeholder\" \n      :canClear=\"false\"\n      :canDeselect=\"false\"\n    />\n  </div>\n</template>\n<script>\nimport Multiselect from \"@vueform/multiselect\";\nexport default {\n  components: { Multiselect },\n  data() {\n    return {\n      internalValue: null,      \n    };\n  },\n  methods:{\n    setNewValue(newValue){\n      this.internalValue = newValue\n    }\n  },\n  watch: {\n    internalValue: function(value){\n      this.$emit('update:modelValue', value)\n      if(this.onChange) this.onChange()\n    }\n  },\n  computed: {\n    _placeholder() {\n      return this.placeholder??\"Select One\"\n    }\n  },\n  props: {\n    options: {\n      type:Array,\n      require:true\n    },\n    placeholder: {\n      type:String,\n      require:false\n    },\n    onChange: {\n      type:Function,\n      require:false\n    },\n    defaultValue:{\n      type: String,\n      require: false\n    },\n    disabledSelect: {\n      type: Boolean,\n      require: false,\n      default: () => false\n    }\n  },\n  created(){\n    if (this.defaultValue){\n      this.internalValue = this.defaultValue\n    }\n  }\n};\n</script>\n\n<style>\n  .is-disabled .multiselect-input {\n    background: transparent !important;\n  }\n</style>\n<style src=\"@vueform/multiselect/themes/default.css\"></style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}