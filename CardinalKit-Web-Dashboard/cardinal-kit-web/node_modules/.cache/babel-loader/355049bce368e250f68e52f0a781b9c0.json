{"ast":null,"code":"import { initialState } from './index';\nexport function RESET(state) {\n  const newState = initialState();\n  Object.keys(newState).forEach(key => {\n    state[key] = newState[key];\n  });\n}\nexport function error(state, errorMessage) {\n  state.error = true;\n  state.errorMessage = errorMessage;\n}\nexport function cleanErrors(state) {\n  state.error = false;\n  state.errorMessage = \"\";\n}\nexport function isLogged(state, isLogged) {\n  localStorage.setItem('logged', isLogged);\n  state.isLogged = isLogged;\n}","map":{"version":3,"names":["initialState","RESET","state","newState","Object","keys","forEach","key","error","errorMessage","cleanErrors","isLogged","localStorage","setItem"],"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/store/modules/authFirebase/mutations.js"],"sourcesContent":["import {initialState} from './index'\n\nexport function RESET(state){\n    const newState= initialState();\n    Object.keys(newState).forEach(key => {\n        state[key] = newState[key]\n    });\n}\n\nexport function error(state,errorMessage){\n    state.error = true\n    state.errorMessage = errorMessage\n}\n\nexport function cleanErrors(state){\n    state.error = false\n    state.errorMessage = \"\"\n}\n\nexport function isLogged(state,isLogged){\n    localStorage.setItem('logged',isLogged)\n    state.isLogged=isLogged\n}"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,SAA3B;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAqB;EACxB,MAAMC,QAAQ,GAAEH,YAAY,EAA5B;EACAI,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,OAAtB,CAA8BC,GAAG,IAAI;IACjCL,KAAK,CAACK,GAAD,CAAL,GAAaJ,QAAQ,CAACI,GAAD,CAArB;EACH,CAFD;AAGH;AAED,OAAO,SAASC,KAAT,CAAeN,KAAf,EAAqBO,YAArB,EAAkC;EACrCP,KAAK,CAACM,KAAN,GAAc,IAAd;EACAN,KAAK,CAACO,YAAN,GAAqBA,YAArB;AACH;AAED,OAAO,SAASC,WAAT,CAAqBR,KAArB,EAA2B;EAC9BA,KAAK,CAACM,KAAN,GAAc,KAAd;EACAN,KAAK,CAACO,YAAN,GAAqB,EAArB;AACH;AAED,OAAO,SAASE,QAAT,CAAkBT,KAAlB,EAAwBS,QAAxB,EAAiC;EACpCC,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA8BF,QAA9B;EACAT,KAAK,CAACS,QAAN,GAAeA,QAAf;AACH"},"metadata":{},"sourceType":"module"}