{"ast":null,"code":"import { FetchLastQuantityData } from \"../../index\";\nexport const FetchLastRespiratoryData = async ({\n  commit\n}, payload) => {\n  let data = await Promise.all([FetchLastQuantityData(\"HKQuantityTypeIdentifierOxygenSaturation\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierInhalerUsage\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierRespiratoryRate\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierForcedExpiratoryVolume1\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierForcedVitalCapacity\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierSixMinuteWalkTestDistance\", { ...payload,\n    limit: 1\n  }), FetchLastQuantityData(\"HKQuantityTypeIdentifierPeakExpiratoryFlowRate\", { ...payload,\n    limit: 1\n  })]);\n  commit(\"saveLastCategoryData\", {\n    category: payload.category,\n    data: data\n  });\n  return {\n    \"name\": \"respiratory\",\n    \"data\": data.filter(e => e && e.length > 0)\n  };\n};","map":{"version":3,"names":["FetchLastQuantityData","FetchLastRespiratoryData","commit","payload","data","Promise","all","limit","category","filter","e","length"],"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/store/modules/patient/HealthData/Respiratory/actions.js"],"sourcesContent":["import {\n    FetchLastQuantityData,\n  } from \"../../index\";\n  \n  export const FetchLastRespiratoryData = async ({ commit }, payload) => {\n    let data =  await Promise.all([\n      FetchLastQuantityData(\"HKQuantityTypeIdentifierOxygenSaturation\", {...payload,limit: 1,}),\n      FetchLastQuantityData(\"HKQuantityTypeIdentifierInhalerUsage\", {...payload,limit: 1,}),\n      FetchLastQuantityData(\"HKQuantityTypeIdentifierRespiratoryRate\", {...payload,limit: 1,}),\n      FetchLastQuantityData(\"HKQuantityTypeIdentifierForcedExpiratoryVolume1\", {...payload,limit: 1,}),\n      FetchLastQuantityData(\"HKQuantityTypeIdentifierForcedVitalCapacity\", {...payload,limit: 1,}),\n      FetchLastQuantityData(\"HKQuantityTypeIdentifierSixMinuteWalkTestDistance\", {...payload,limit: 1,}),\n      FetchLastQuantityData(\"HKQuantityTypeIdentifierPeakExpiratoryFlowRate\", {...payload,limit: 1,}),\n    ])\n    commit(\"saveLastCategoryData\", {\n      category: payload.category,\n      data: data\n    });\n\n    return {\"name\":\"respiratory\",\"data\":data.filter(e => (e && e.length>0))}\n  };"],"mappings":"AAAA,SACIA,qBADJ,QAES,aAFT;AAIE,OAAO,MAAMC,wBAAwB,GAAG,OAAO;EAAEC;AAAF,CAAP,EAAmBC,OAAnB,KAA+B;EACrE,IAAIC,IAAI,GAAI,MAAMC,OAAO,CAACC,GAAR,CAAY,CAC5BN,qBAAqB,CAAC,0CAAD,EAA6C,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAA7C,CADO,EAE5BP,qBAAqB,CAAC,sCAAD,EAAyC,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAAzC,CAFO,EAG5BP,qBAAqB,CAAC,yCAAD,EAA4C,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAA5C,CAHO,EAI5BP,qBAAqB,CAAC,iDAAD,EAAoD,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAApD,CAJO,EAK5BP,qBAAqB,CAAC,6CAAD,EAAgD,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAAhD,CALO,EAM5BP,qBAAqB,CAAC,mDAAD,EAAsD,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAAtD,CANO,EAO5BP,qBAAqB,CAAC,gDAAD,EAAmD,EAAC,GAAGG,OAAJ;IAAYI,KAAK,EAAE;EAAnB,CAAnD,CAPO,CAAZ,CAAlB;EASAL,MAAM,CAAC,sBAAD,EAAyB;IAC7BM,QAAQ,EAAEL,OAAO,CAACK,QADW;IAE7BJ,IAAI,EAAEA;EAFuB,CAAzB,CAAN;EAKA,OAAO;IAAC,QAAO,aAAR;IAAsB,QAAOA,IAAI,CAACK,MAAL,CAAYC,CAAC,IAAKA,CAAC,IAAIA,CAAC,CAACC,MAAF,GAAS,CAAhC;EAA7B,CAAP;AACD,CAhBM"},"metadata":{},"sourceType":"module"}