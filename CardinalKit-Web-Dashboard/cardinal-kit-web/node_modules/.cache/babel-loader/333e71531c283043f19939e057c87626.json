{"ast":null,"code":"import { onMounted, onUnmounted, ref } from 'vue';\nimport DatePicker from './DatePicker.vue';\nexport default {\n  components: {\n    DatePicker\n  },\n  props: {\n    modelValue: [Date, Object],\n    range: {\n      type: Boolean,\n      default: false\n    },\n    withCalendar: {\n      type: Boolean,\n      default: false\n    },\n    defaultDate: [Date, Object]\n  },\n  emits: ['update:modelValue'],\n\n  setup(props, ctx) {\n    const startElement = ref();\n    const endElement = ref();\n    const startDateTooltip = ref(false);\n    const endDateTooltip = ref(false);\n    const date = ref();\n    const startDate = ref();\n    const endDate = ref();\n    onMounted(() => {\n      if (props.range) {\n        startDate.value = props.defaultDate?.startDate || new Date();\n        endDate.value = props.defaultDate?.endDate || new Date();\n        date.value = {\n          startDate: startDate.value,\n          endDate: endDate.value\n        };\n      } else {\n        date.value = props.defaultDate || new Date();\n        startDate.value = date.value;\n      }\n\n      ctx.emit('update:modelValue', date.value);\n    });\n\n    function handleChangeDates(value, key) {\n      if (value) {\n        date.value = !props.range ? value : rangeDates(value, key);\n        ctx.emit('update:modelValue', date.value);\n      }\n    }\n\n    const rangeDates = (value, key) => {\n      if (key === 'startDate' && date.value?.endDate < value) {\n        endDate.value = value;\n        return {\n          startDate: value,\n          endDate: value\n        };\n      }\n\n      if (key === 'endDate' && date.value?.startDate > value) {\n        startDate.value = value;\n        return {\n          startDate: value,\n          endDate: value\n        };\n      }\n\n      return { ...date.value,\n        [key]: value\n      };\n    };\n\n    function elementIsContain(element) {\n      startDateTooltip.value = startElement.value.$el?.contains(element.target);\n      props?.range && (endDateTooltip.value = endElement.value.$el?.contains(element.target));\n    }\n\n    window.addEventListener('click', elementIsContain);\n    onUnmounted(() => window.removeEventListener('click', elementIsContain));\n    return {\n      startDateTooltip,\n      endDateTooltip,\n      startElement,\n      endElement,\n      handleChangeDates,\n      startDate,\n      endDate\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/calendar/AltDate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"alt-date\">\n    <date-picker \n      :calendar=\"withCalendar\"\n      ref=\"startElement\"\n      :showPopup=\"startDateTooltip\"\n      @changeDate=\"handleChangeDates($event, 'startDate')\"\n      :defaultDate=\"startDate\" label='Start Date' />\n    <date-picker \n      :calendar=\"withCalendar\" \n      v-if=\"range\" ref=\"endElement\" \n      :showPopup=\"endDateTooltip\" \n      @changeDate=\"handleChangeDates($event, 'endDate')\" \n      :defaultDate=\"endDate\" \n      label='End Date' />\n  </div>\n</template>\n\n<script>\nimport { onMounted, onUnmounted, ref } from 'vue';\nimport DatePicker from './DatePicker.vue';\n\nexport default {\n  components: { DatePicker },\n  props: {\n    modelValue: [Date, Object],\n    range: {\n      type: Boolean,\n      default: false\n    },\n    withCalendar: {\n      type: Boolean,\n      default: false\n    },\n    defaultDate: [Date, Object],\n  },\n  emits: ['update:modelValue'],\n\tsetup(props, ctx) {\n\t\tconst startElement = ref();\n\t\tconst endElement = ref();\n\t\tconst startDateTooltip = ref(false);\n\t\tconst endDateTooltip = ref(false);\n    const date = ref();\n    const startDate = ref();\n    const endDate = ref();\n\n    onMounted(() => {\n      if(props.range) {\n        startDate.value = props.defaultDate?.startDate || new Date();\n        endDate.value = props.defaultDate?.endDate || new Date();\n        date.value = {\n          startDate: startDate.value,\n          endDate: endDate.value,\n        } \n      } else {\n        date.value = props.defaultDate || new Date();\n        startDate.value = date.value;\n      }\n      \n      ctx.emit('update:modelValue', date.value);\n    });\n\n    function handleChangeDates(value, key) {\n      if (value) {\n        date.value = !props.range ? value : rangeDates(value, key)\n        ctx.emit('update:modelValue', date.value)\n      }\n    }\n\n    const rangeDates = (value,  key) => {\n      if(key === 'startDate' && (date.value?.endDate < value)) {\n        endDate.value = value;\n        return { startDate: value, endDate: value }\n      }\n      if(key === 'endDate' && (date.value?.startDate > value)) {\n        startDate.value = value;\n        return { startDate: value, endDate: value };\n      }\n      return { ...date.value, [key]: value }\n    }\n    \n\t\tfunction elementIsContain(element) {\n\t\t\tstartDateTooltip.value = startElement.value.$el?.contains(element.target);\n\t\t\tprops?.range && (endDateTooltip.value = endElement.value.$el?.contains(element.target));\n\t\t}\n\n\t\twindow.addEventListener('click', elementIsContain);\n\n\t\tonUnmounted(() => window.removeEventListener('click', elementIsContain));\n\n\t\treturn {\n\t\t\tstartDateTooltip,\n      endDateTooltip,\n\t\t\tstartElement,\n      endElement,\n      handleChangeDates,\n      startDate,\n      endDate\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.alt-date {\n\tposition: relative;\n\tdisplay: inline-flex;\n  gap: 10px;\n}\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}