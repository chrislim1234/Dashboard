{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, withModifiers as _withModifiers, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"my-2\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-muted\"\n}, \"Users who have access to my data \")], -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"btn-content mt-2\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  id: \"signup\",\n  class: \"mb-1 text-center text-muted\"\n}, \"Search the user by id \")], -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group__horizontal\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = {\n  class: \"w-100 form-group\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"text-muted\"\n}, \"User Id\", -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"button\", {\n  id: \"b-signup\",\n  class: \"btn btn-ck fill-danger w-50 m-auto\",\n  type: \"submit\"\n}, \" Share \", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_modal = _resolveComponent(\"modal\");\n\n  const _component_alt_table = _resolveComponent(\"alt-table\");\n\n  const _component_alt_select = _resolveComponent(\"alt-select\");\n\n  const _component_Card = _resolveComponent(\"Card\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createVNode(_component_alt_table, {\n    columns: $data.columns,\n    pagination: \"\",\n    paginationOptions: $options.paginationOptions,\n    onOnPagination: $options.handlePagination\n  }, {\n    \"t-row\": _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getPageItems, user => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: user.id\n      }, [_createElementVNode(\"td\", null, _toDisplayString(user.id), 1\n      /* TEXT */\n      ), _createElementVNode(\"td\", null, [_createVNode(_component_modal, {\n        label: 'Remove',\n        name: user.id,\n        title: \"Are you sure?\",\n        content: \"Do you want to remove the access of your data to this user?\",\n        onAccept: $options.remove\n      }, null, 8\n      /* PROPS */\n      , [\"name\", \"onAccept\"])])]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"columns\", \"paginationOptions\", \"onOnPagination\"]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.showAddNewUser = true)\n  }, \"Share With New User\")]), _hoisted_5, _withDirectives(_createElementVNode(\"div\", null, [_createVNode(_component_Card, null, {\n    \"card-header\": _withCtx(() => [_hoisted_6]),\n    \"card-body\": _withCtx(() => [_createElementVNode(\"form\", {\n      class: \"login-form\",\n      onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.share && $options.share(...args), [\"prevent\"]))\n    }, [_hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createVNode(_component_alt_select, {\n      options: $options.getDoctorsAdminFormated,\n      modelValue: $data.doctorSelected,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.doctorSelected = $event),\n      ref: \"userSelec\"\n    }, null, 8\n    /* PROPS */\n    , [\"options\", \"modelValue\"])]), _hoisted_10], 32\n    /* HYDRATE_EVENTS */\n    )]),\n    _: 1\n    /* STABLE */\n\n  })], 512\n  /* NEED_PATCH */\n  ), [[_vShow, $data.showAddNewUser]])]);\n}","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/views/share/shareHome.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n <div class=\"page\">\n    <br />\n    <div  class=\"my-2\">\n      <h1 class=\"text-muted\">Users who have access to my data </h1>\n    </div>\n    <alt-table :columns=\"columns\" pagination \n      :paginationOptions=\"paginationOptions\"\n      @onPagination=\"handlePagination\"\n    >\n    <template #t-row>\n      <tr v-for=\"user in getPageItems\" :key=\"user.id\">\n      <td>\n      {{user.id}}\n      </td>\n        <td >\n        <modal\n            :label=\"'Remove'\"\n            :name=\"user.id\"\n            title=\"Are you sure?\"\n            content=\"Do you want to remove the access of your data to this user?\"\n            @accept=\"remove\"\n          />\n        </td>\n      </tr>\n    </template>\n    </alt-table>\n    <div  class=\"btn-content mt-2\">\n      <button @click=\"showAddNewUser=true\">Share With New User</button>\n    </div>\n    <br />\n\n      <div v-show=\"showAddNewUser\">\n      <Card>\n      <template v-slot:card-header>\n        <div class=\"card-header\">\n          <h1 id=\"signup\" class=\"mb-1 text-center text-muted\">Search the user by id  </h1>\n        </div>\n      </template>\n      <template v-slot:card-body>\n        <form class=\"login-form\" @submit.prevent=\"share\">\n          <div class=\"form-group__horizontal\"></div>\n          <div class=\"w-100 form-group\">\n            <label for=\"email\" class=\"text-muted\">User Id</label>\n             <alt-select :options=\"getDoctorsAdminFormated\" v-model=\"doctorSelected\" ref=\"userSelec\" />\n          </div>\n         \n          <button id=\"b-signup\"\n            class=\"btn btn-ck fill-danger w-50 m-auto\"\n            type=\"submit\">\n            Share\n          </button>\n        </form>\n      </template>\n    </Card>\n      </div>\n\n\n\n\n  </div>\n\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport store from \"@/store\";\nimport altTable from '@/components/tables/altTable';\nimport modal from \"@/components/modals/modal.vue\"\nimport Card from \"@/components/auth/Card\";\nimport altSelect from \"@/components/multiSelect/Select\";\n\nexport default {  \n  data(){\n    return{\n      columns: [{header: 'User Id'}, {header: 'Actions'}],\n      currentPage: 1,\n      limit: 10,\n      showAddNewUser: false,\n      email: \"\",\n      doctorSelected: \"\"\n    }\n  },\n  components: {\n    Card,\n    altTable,\n    altSelect,\n    modal\n  },\n  computed:{\n    ...mapGetters(\"share\",[\"getUsersHaveMyData\",\"getDoctorsAdmin\"]),\n    getDoctorsAdminFormated(){\n      return this.getDoctorsAdmin.map((element)=>{\n        return element.id\n      })\n    },\n    paginationOptions() {\n      return {\n        limit: [10, 20],\n        total: 10,\n        currentPage: this.currentPage,\n      };\n    },\n    getPageItems() {\n      if (this.getUsersHaveMyData){\n        let items = this.getUsersHaveMyData;\n        let lowerLimit = (this.currentPage - 1) * this.limit;\n        let upperLimit = this.currentPage * this.limit;\n        return items.slice(lowerLimit, upperLimit);\n      }\n      return {}\n    },\n  },\n  methods:{\n    ...mapActions(\"share\",[\"ShareMyData\",\"RemoveAccess\"]),\n    share(){\n      console.log(this.$route.params.studyId)\n      this.ShareMyData({userId:this.doctorSelected,studyId:this.$route.params.studyId}).then(()=>{\n        console.log(\"shareeee\")\n       this.reload()\n      })\n    },\n    handlePagination(pagination) {\n      this.currentPage=pagination.currentPage\n      this.limit=pagination.limit\n      let total = this.surveyData.length\n      if(this.currentPage > Math.ceil(total/this.limit)){\n        this.currentPage = Math.ceil(total/this.limit)\n      }\n    },\n    remove(userId){\n      this.RemoveAccess(userId).then(()=>{\n        this.reload()\n      })\n    },\n    fuseSearch(options, search){\n      console.log(\"options\",option)\n      console.log(\"search\",search)\n      return options\n    },\n    reload(){\n      this.doctorSelected=\"\"\n        this.showAddNewUser=false\n        this.$refs[\"userSelec\"].setNewValue(null)\n        store.dispatch(\"share/FetchUserHaveMyData\"),\n        store.dispatch(\"share/FetchAllDoctorsAndSuperAdmin\")\n    }\n  },\n  beforeRouteEnter(to, from, next){\n    Promise.all([\n      store.dispatch(\"share/FetchUserHaveMyData\"),\n      store.dispatch(\"share/FetchAllDoctorsAndSuperAdmin\")\n    ]).then(()=>{\n      next()\n    })\n  }\n  \n}\n</script>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}