{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Options: \", -1);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_3 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"CheckBoxInput\",\n  type: \"checkbox\",\n  disabled: \"\"\n}, null, -1);\n\nconst _hoisted_5 = [\"onUpdate:modelValue\", \"name\"];\nconst _hoisted_6 = [\"onClick\"];\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.Options, (option, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => option.text = $event,\n      name: `options[${index}]`,\n      type: \"text\",\n      class: _normalizeClass($options.classError(option.value))\n    }, null, 10, _hoisted_5), [[_vModelText, option.text]]), index > 1 ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: () => {\n        $options.deleteOptions(index);\n      },\n      type: \"button\"\n    }, \" Delete \", 8, _hoisted_6)) : _createCommentVNode(\"\", true)]), _hoisted_7]);\n  }), 128)), _hoisted_8, _hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.addOptions($props.Options)),\n    type: \"button\",\n    class: \"btn btn-terceary\"\n  }, \" Add Options \")])]);\n}","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/surveys/SurveyBuilder/questionsTypes/CheckBox.vue"],"names":[],"mappings":";;gCAEI,mBAAA,CAAwB,OAAxB,EAAwB,IAAxB,EAAO,WAAP,EAAgB,CAAA,CAAhB,C;;gCAEE,mBAAA,CAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM,CAAA,CAAN,C;;;EACK,KAAsB,EAAtB;IAAA,WAAA;EAAA;;;gCACH,mBAAA,CAAwD,OAAxD,EAAwD;EAAjD,KAAK,EAAC,eAA2C;EAA3B,IAAI,EAAC,UAAsB;EAAX,QAAQ,EAAR;AAAW,CAAxD,E,IAAA,E,EAAA,C;;;;;gCAmBF,mBAAA,CAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM,CAAA,CAAN,C;;gCAEF,mBAAA,CAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM,CAAA,CAAN,C;;gCACA,mBAAA,CAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM,CAAA,CAAN,C;;;EACK,KAAK,EAAC;;;uBA5Bb,mBAAA,CAiCM,KAjCN,EAiCM,IAjCN,EAiCM,CAhCJ,UAgCI,G,kBA/BJ,mBAAA,CAuBM,SAvBN,EAuBM,IAvBN,EAuBM,WAAA,CAvByB,MAAA,CAAA,OAuBzB,EAvBgC,CAAzB,MAAyB,EAAjB,KAAiB,KAAZ;yBAA1B,mBAAA,CAuBM,KAvBN,EAuBM;MAvBmC,GAAG,EAAE;IAuBxC,CAvBN,EAAmD,CACjD,UADiD,EAEjD,mBAAA,CAmBM,KAnBN,EAAA,UAAA,EAmBM,CAlBJ,UAkBI,E,gBAjBJ,mBAAA,CAKE,OALF,EAKE;uCAJS,MAAM,CAAC,I,GAAI,MAIpB;MAHC,IAAI,EAAA,WAAa,KAAK,GAGvB;MAFA,IAAI,EAAC,MAEL;MADC,KAAK,EAAA,eAAA,CAAE,QAAA,CAAA,UAAA,CAAW,MAAM,CAAC,KAAlB,CAAF;IACN,CALF,E,IAAA,E,EAAA,E,UAAA,C,iBACW,MAAM,CAAC,I,GAgBd,EAVI,KAAK,GAAA,C,kBADb,mBAAA,CAUS,QAVT,EAUS;YAAA;MARN,OAAK,E;QAAqC,QAAA,CAAA,aAAA,CAAc,KAAd;OAQpC;MAHP,IAAI,EAAC;IAGE,CAVT,EAQC,UARD,EAUA,CAVA,EAUA,UAVA,C,iCAWI,CAnBN,CAFiD,EAsBjD,UAtBiD,CAAnD,C;GAuBM,CAvBN,E,GAAA,CA+BI,GAPJ,UAOI,EANJ,UAMI,EALJ,mBAAA,CAIM,KAJN,EAAA,WAAA,EAIM,CAHJ,mBAAA,CAES,QAFT,EAES;IAFA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,IAAE,QAAA,CAAA,UAAA,CAAW,MAAA,CAAA,OAAX,CAAF,CAEL;IAF4B,IAAI,EAAC,QAEjC;IAF0C,KAAK,EAAC;EAEhD,CAFT,EAA4E,eAA5E,CAGI,CAJN,CAKI,CAjCN,C","sourcesContent":["<template>\n  <div>\n    <label>Options: </label>\n    <div v-for=\"(option, index) in Options\" :key=\"index\">\n      <br />\n      <div style=\"display: flex;\">\n        <input class=\"CheckBoxInput\" type=\"checkbox\" disabled />\n        <input\n          v-model=\"option.text\"\n          :name=\"`options[${index}]`\"\n          type=\"text\"\n          :class=\"classError(option.value)\"\n        />\n        <button\n          v-if=\"index > 1\"\n          @click=\"\n            () => {\n              deleteOptions(index);\n            }\n          \"\n          type=\"button\"\n        >\n          Delete\n        </button>\n      </div>\n      <br />\n    </div>\n    <br />\n    <br />\n    <div class=\"form-group\">\n      <button @click=\"addOptions(Options)\" type=\"button\" class=\"btn btn-terceary\">\n        Add Options\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data:() => ({\n    errors:{}\n  }),\n  props: {\n    Options: Array,\n  },\n  methods: {\n    classError(value){\n      if(this.errors[value]){\n        return \"TextInput input-no-value-style\"\n      }\n      return \"TextInput\"\n    },\n    addOptions() {\n      const val = this.Options.length;\n      this.Options.push({ text: \"\", value: \"\"+val });\n    },\n    deleteOptions(index) {\n      this.Options.splice(index, 1);\n    },\n    checkQuestion(){\n      let error = false\n      let msg = \"\"\n      this.errors={}\n      this.Options.forEach(element => {\n        if(element.text==\"\"){\n          error = true\n          msg = \"The fields can't be blank\"\n          this.errors[element.value]=true\n        }\n      });\n      \n      return {\"error\":error,\"msg\":msg};\n    }\n  },\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}