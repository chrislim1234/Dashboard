{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport store from \"@/store\";\nimport altTable from '@/components/tables/altTable';\nimport modal from \"@/components/modals/modal.vue\";\nimport Card from \"@/components/auth/Card\";\nimport altSelect from \"@/components/multiSelect/Select\";\nexport default {\n  data() {\n    return {\n      columns: [{\n        header: 'User Id'\n      }, {\n        header: 'Actions'\n      }],\n      currentPage: 1,\n      limit: 10,\n      showAddNewUser: false,\n      email: \"\",\n      doctorSelected: \"\"\n    };\n  },\n\n  components: {\n    Card,\n    altTable,\n    altSelect,\n    modal\n  },\n  computed: { ...mapGetters(\"share\", [\"getUsersHaveMyData\", \"getDoctorsAdmin\"]),\n\n    getDoctorsAdminFormated() {\n      return this.getDoctorsAdmin.map(element => {\n        return element.id;\n      });\n    },\n\n    paginationOptions() {\n      return {\n        limit: [10, 20],\n        total: 10,\n        currentPage: this.currentPage\n      };\n    },\n\n    getPageItems() {\n      if (this.getUsersHaveMyData) {\n        let items = this.getUsersHaveMyData;\n        let lowerLimit = (this.currentPage - 1) * this.limit;\n        let upperLimit = this.currentPage * this.limit;\n        return items.slice(lowerLimit, upperLimit);\n      }\n\n      return {};\n    }\n\n  },\n  methods: { ...mapActions(\"share\", [\"ShareMyData\", \"RemoveAccess\"]),\n\n    share() {\n      console.log(this.$route.params.studyId);\n      this.ShareMyData({\n        userId: this.doctorSelected,\n        studyId: this.$route.params.studyId\n      }).then(() => {\n        console.log(\"shareeee\");\n        this.reload();\n      });\n    },\n\n    handlePagination(pagination) {\n      this.currentPage = pagination.currentPage;\n      this.limit = pagination.limit;\n      let total = this.surveyData.length;\n\n      if (this.currentPage > Math.ceil(total / this.limit)) {\n        this.currentPage = Math.ceil(total / this.limit);\n      }\n    },\n\n    remove(userId) {\n      this.RemoveAccess(userId).then(() => {\n        this.reload();\n      });\n    },\n\n    fuseSearch(options, search) {\n      console.log(\"options\", option);\n      console.log(\"search\", search);\n      return options;\n    },\n\n    reload() {\n      this.doctorSelected = \"\";\n      this.showAddNewUser = false;\n      this.$refs[\"userSelec\"].setNewValue(null);\n      store.dispatch(\"share/FetchUserHaveMyData\"), store.dispatch(\"share/FetchAllDoctorsAndSuperAdmin\");\n    }\n\n  },\n\n  beforeRouteEnter(to, from, next) {\n    Promise.all([store.dispatch(\"share/FetchUserHaveMyData\"), store.dispatch(\"share/FetchAllDoctorsAndSuperAdmin\")]).then(() => {\n      next();\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/views/share/shareHome.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n <div class=\"page\">\n    <br />\n    <div  class=\"my-2\">\n      <h1 class=\"text-muted\">Users who have access to my data </h1>\n    </div>\n    <alt-table :columns=\"columns\" pagination \n      :paginationOptions=\"paginationOptions\"\n      @onPagination=\"handlePagination\"\n    >\n    <template #t-row>\n      <tr v-for=\"user in getPageItems\" :key=\"user.id\">\n      <td>\n      {{user.id}}\n      </td>\n        <td >\n        <modal\n            :label=\"'Remove'\"\n            :name=\"user.id\"\n            title=\"Are you sure?\"\n            content=\"Do you want to remove the access of your data to this user?\"\n            @accept=\"remove\"\n          />\n        </td>\n      </tr>\n    </template>\n    </alt-table>\n    <div  class=\"btn-content mt-2\">\n      <button @click=\"showAddNewUser=true\">Share With New User</button>\n    </div>\n    <br />\n\n      <div v-show=\"showAddNewUser\">\n      <Card>\n      <template v-slot:card-header>\n        <div class=\"card-header\">\n          <h1 id=\"signup\" class=\"mb-1 text-center text-muted\">Search the user by id  </h1>\n        </div>\n      </template>\n      <template v-slot:card-body>\n        <form class=\"login-form\" @submit.prevent=\"share\">\n          <div class=\"form-group__horizontal\"></div>\n          <div class=\"w-100 form-group\">\n            <label for=\"email\" class=\"text-muted\">User Id</label>\n             <alt-select :options=\"getDoctorsAdminFormated\" v-model=\"doctorSelected\" ref=\"userSelec\" />\n          </div>\n         \n          <button id=\"b-signup\"\n            class=\"btn btn-ck fill-danger w-50 m-auto\"\n            type=\"submit\">\n            Share\n          </button>\n        </form>\n      </template>\n    </Card>\n      </div>\n\n\n\n\n  </div>\n\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport store from \"@/store\";\nimport altTable from '@/components/tables/altTable';\nimport modal from \"@/components/modals/modal.vue\"\nimport Card from \"@/components/auth/Card\";\nimport altSelect from \"@/components/multiSelect/Select\";\n\nexport default {  \n  data(){\n    return{\n      columns: [{header: 'User Id'}, {header: 'Actions'}],\n      currentPage: 1,\n      limit: 10,\n      showAddNewUser: false,\n      email: \"\",\n      doctorSelected: \"\"\n    }\n  },\n  components: {\n    Card,\n    altTable,\n    altSelect,\n    modal\n  },\n  computed:{\n    ...mapGetters(\"share\",[\"getUsersHaveMyData\",\"getDoctorsAdmin\"]),\n    getDoctorsAdminFormated(){\n      return this.getDoctorsAdmin.map((element)=>{\n        return element.id\n      })\n    },\n    paginationOptions() {\n      return {\n        limit: [10, 20],\n        total: 10,\n        currentPage: this.currentPage,\n      };\n    },\n    getPageItems() {\n      if (this.getUsersHaveMyData){\n        let items = this.getUsersHaveMyData;\n        let lowerLimit = (this.currentPage - 1) * this.limit;\n        let upperLimit = this.currentPage * this.limit;\n        return items.slice(lowerLimit, upperLimit);\n      }\n      return {}\n    },\n  },\n  methods:{\n    ...mapActions(\"share\",[\"ShareMyData\",\"RemoveAccess\"]),\n    share(){\n      console.log(this.$route.params.studyId)\n      this.ShareMyData({userId:this.doctorSelected,studyId:this.$route.params.studyId}).then(()=>{\n        console.log(\"shareeee\")\n       this.reload()\n      })\n    },\n    handlePagination(pagination) {\n      this.currentPage=pagination.currentPage\n      this.limit=pagination.limit\n      let total = this.surveyData.length\n      if(this.currentPage > Math.ceil(total/this.limit)){\n        this.currentPage = Math.ceil(total/this.limit)\n      }\n    },\n    remove(userId){\n      this.RemoveAccess(userId).then(()=>{\n        this.reload()\n      })\n    },\n    fuseSearch(options, search){\n      console.log(\"options\",option)\n      console.log(\"search\",search)\n      return options\n    },\n    reload(){\n      this.doctorSelected=\"\"\n        this.showAddNewUser=false\n        this.$refs[\"userSelec\"].setNewValue(null)\n        store.dispatch(\"share/FetchUserHaveMyData\"),\n        store.dispatch(\"share/FetchAllDoctorsAndSuperAdmin\")\n    }\n  },\n  beforeRouteEnter(to, from, next){\n    Promise.all([\n      store.dispatch(\"share/FetchUserHaveMyData\"),\n      store.dispatch(\"share/FetchAllDoctorsAndSuperAdmin\")\n    ]).then(()=>{\n      next()\n    })\n  }\n  \n}\n</script>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}