{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"My Calendar\", -1);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_6 = {\n  class: \"inline my-4\",\n  id: \"calendar\"\n};\nconst _hoisted_7 = {\n  class: \"modal\",\n  id: \"modal\"\n};\nconst _hoisted_8 = {\n  class: \"modal-content\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"modal-hide\",\n  href: \"#\"\n}, \"âœ•\", -1);\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"m-4 text-center\"\n}, \"Calendar survey\", -1);\n\nconst _hoisted_11 = {\n  class: \"input-form\"\n};\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Start Date: \", -1);\n\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"label\", null, \"End Date: \", -1);\n\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Interval days: \", -1);\n\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Survey: \", -1);\n\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Description: \", -1);\n\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_22 = {\n  class: \"form-group text-center inline\"\n};\n\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"#\",\n  class: \"m-1 button\"\n}, \"Cancel\", -1);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_calendar_view_header = _resolveComponent(\"calendar-view-header\");\n\n  const _component_calendar_view = _resolveComponent(\"calendar-view\");\n\n  const _component_alt_table = _resolveComponent(\"alt-table\");\n\n  const _component_alt_select = _resolveComponent(\"alt-select\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createVNode(_component_calendar_view, {\n    items: $options.calendarMonthItems,\n    \"show-date\": _ctx.showDate,\n    class: \"theme-default holiday-us-traditional holiday-us-official\",\n    \"period-changed-callback\": $options.periodChanged\n  }, {\n    header: _withCtx(({\n      headerProps\n    }) => [_createVNode(_component_calendar_view_header, {\n      \"header-props\": headerProps,\n      onInput: $options.setShowDate\n    }, null, 8, [\"header-props\", \"onInput\"])]),\n    _: 1\n  }, 8, [\"items\", \"show-date\", \"period-changed-callback\"]), _hoisted_4, _hoisted_5, _createVNode(_component_alt_table, {\n    columns: _ctx.columns,\n    pagination: \"\"\n  }, {\n    \"t-row\": _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.tableItems, survey => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: survey.name\n      }, [_createElementVNode(\"td\", null, _toDisplayString(survey.name), 1), _createElementVNode(\"td\", null, _toDisplayString(survey.identifier), 1), _createElementVNode(\"td\", null, _toDisplayString(survey.startDate), 1), _createElementVNode(\"td\", null, _toDisplayString(survey.endDate), 1), _createElementVNode(\"td\", null, _toDisplayString(survey.interval), 1)]);\n    }), 128))]),\n    _: 1\n  }, 8, [\"columns\"]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"a\", {\n    class: \"modal-show button\",\n    href: \"#modal\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.resetForm && $options.resetForm(...args))\n  }, \"Add survey to calendar\"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _hoisted_10, _createElementVNode(\"div\", _hoisted_11, [_ctx.errMsg ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(_ctx.cl)\n  }, _toDisplayString(_ctx.msg), 3)) : _createCommentVNode(\"\", true), _hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.startDate = $event),\n    type: \"datetime-local\"\n  }, null, 512), [[_vModelText, _ctx.startDate]]), _hoisted_13, _hoisted_14, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.endDate = $event),\n    type: \"datetime-local\"\n  }, null, 512), [[_vModelText, _ctx.endDate]]), _hoisted_15, _hoisted_16, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.intervalDays = $event),\n    type: \"number\",\n    min: \"1\",\n    pattern: \"^[0-9]+\"\n  }, null, 512), [[_vModelText, _ctx.intervalDays]]), _hoisted_17, _hoisted_18, _createVNode(_component_alt_select, {\n    options: $options.surveys,\n    modelValue: _ctx.SurveySelected,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.SurveySelected = $event)\n  }, null, 8, [\"options\", \"modelValue\"]), _hoisted_19, _hoisted_20, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.description = $event),\n    type: \"text\",\n    placeholder: \"Enter the description\"\n  }, null, 512), [[_vModelText, _ctx.description]]), _hoisted_21, _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"a\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.saveNewSchedule && $options.saveNewSchedule(...args)),\n    class: \"m-1 button\"\n  }, \" Save \"), _hoisted_23])])])])])]);\n}","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/views/surveys/surveyScheduler.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"page\">\n    <h1>My Calendar</h1>\n    <br />\n    <calendar-view\n      :items=\"calendarMonthItems\"\n      :show-date=\"showDate\"\n      class=\"theme-default holiday-us-traditional holiday-us-official\"\n      :period-changed-callback=\"periodChanged\"\n    >\n      <template #header=\"{ headerProps }\">\n        <calendar-view-header\n          :header-props=\"headerProps\"\n          @input=\"setShowDate\"\n        />\n      </template>\n    </calendar-view>\n    <br />\n    <br />\n    <alt-table :columns=\"columns\" pagination>\n      <template #t-row>\n        <tr v-for=\"survey in tableItems\" :key=\"survey.name\">\n          <td>\n            {{ survey.name }}\n          </td>\n          <td>\n            {{ survey.identifier }}\n          </td>\n          <td>\n            {{ survey.startDate }}\n          </td>\n          <td>\n            {{ survey.endDate }}\n          </td>\n          <td>\n            {{ survey.interval }}\n          </td>\n          <!-- <td>\n            <button @click=\"schedule(survey.name)\">\n              Change Dates\n            </button>\n          </td> -->\n        </tr>\n      </template>\n    </alt-table>\n    <div class=\"inline my-4\" id=\"calendar\">\n      <a class=\"modal-show button\" href=\"#modal\" @click=\"resetForm\">Add survey to calendar</a>\n      <div class=\"modal\" id=\"modal\">\n        <div class=\"modal-content\">\n          <a class=\"modal-hide\" href=\"#\">âœ•</a>\n          <h2 class=\"m-4 text-center\">Calendar survey</h2>\n            <div class=\"input-form\" >\n              <div :class=\"cl\" v-if=\"errMsg\">\n                {{ msg }}\n              </div>\n              <label>Start Date: </label>\n              <input v-model=\"startDate\" type=\"datetime-local\" />\n              <br />\n              <label>End Date: </label>\n              <input v-model=\"endDate\" type=\"datetime-local\"  />\n              <br />\n              <label>Interval days: </label>\n              <input v-model=\"intervalDays\" type=\"number\" min=\"1\" pattern=\"^[0-9]+\" />\n              <br />\n              <label>Survey: </label>\n              <alt-select :options=\"surveys\" v-model=\"SurveySelected\" />\n              <br />\n              <label>Description: </label>\n              <input\n                v-model=\"description\"\n                type=\"text\"\n                placeholder=\"Enter the description\"\n              />\n              <br />\n              <div class=\"form-group text-center inline\">\n                <a @click=\"saveNewSchedule\" class=\"m-1 button\" >\n                  Save\n                </a>\n                <a href=\"#\" class=\"m-1 button\">Cancel</a>\n              </div>\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { CalendarView, CalendarViewHeader } from \"vue-simple-calendar\";\n\nimport \"vue-simple-calendar/dist/style.css\";\nimport \"vue-simple-calendar/static/css/default.css\";\nimport \"vue-simple-calendar/static/css/holidays-us.css\";\nimport altTable from \"@/components/tables/altTable\";\nimport altSelect from \"@/components/multiSelect/Select\";\nimport modal from \"@/components/modals/modal.vue\";\n\nimport store from \"@/store\";\nimport { mapActions, mapGetters } from \"vuex\";\n\nexport default {\n  name: \"app\",\n  data: function() {\n    return {\n      columns: [\n        { header: \"Survey Name\" },\n        { header: \"Survey Identifier\" },\n        { header: \"Start Date\" },\n        { header: \"End Date\" },\n        { header: \"Interval\" },\n      ],\n      showDate: new Date(),\n      studyId: this.$route.params.studyId,\n      displayLastDate: new Date(),\n      displayFirstDate: new Date(),\n      errMsg: false,\n      msg: \"\",\n      startDate: null,\n      endDate: null,\n      intervalDays:1 ,\n      SurveySelected: null,\n      description: \"\",\n      cl: \"\"\n    };\n  },\n  components: {\n    CalendarView,\n    CalendarViewHeader,\n    altTable,\n    altSelect,\n    modal\n  },\n  methods: {\n    ...mapActions(\"surveys\",[\"CreateStudySchedule\",\"CreateUserSchedule\"]),\n    periodChanged(range, eventSource) {\n      this.displayLastDate = range.displayLastDate;\n      this.displayFirstDate = range.displayFirstDate;\n    },\n    setShowDate(d) {\n      this.showDate = d;\n    },\n    isTaskInMonth(startDate, endDate) {\n      return (\n        startDate < this.displayLastDate && endDate > this.displayFirstDate\n      );\n    },\n    resetForm(){\n      this.cl = \"\"\n      this.msg = \"\"\n      this.errMsg=false\n      this.startDate= null\n      this.endDate= null\n      this.intervalDays=1 \n      this.SurveySelected= null\n      this.description = \"\"\n    },\n    saveNewSchedule(){\n      this.cl = \"\"\n      this.msg = \"\"\n      this.errMsg=false\n      if(!this.startDate){\n        this.errMsg = true\n        this.msg = \"Start date is missing\"\n        this.cl = \"alert-err\"\n      }else if(!this.SurveySelected){\n        this.errMsg = true\n        this.msg = \"Survey is missing\"\n        this.cl = \"alert-err\"\n      }else if(!this.description){\n        this.errMsg = true\n        this.cl = \"alert-err\"\n        this.msg = \"Description is missing\"\n      }\n\n      if(!this.errMsg){\n        let data = {\n          studyId:this.studyId,\n          payload:{\n            duration: {allDay: true},\n            startTime: new Date(this.startDate),\n            endTime: this.endDate ? new Date(this.endDate):null,\n            interval:{ day:this.intervalDays},\n            targetValues: [{groupIdentifier:this.SurveySelected}],\n            text: this.description\n          }\n        }\n\n        if(this.$route.query.userId){\n          data[\"userId\"]=this.$route.query.userId\n          this.CreateUserSchedule(data)\n          this.errMsg = true\n          this.cl = 'alert-success'\n          this.msg = \"Calendar survey added successfully\"\n        }\n        else{\n          this.CreateStudySchedule(data)\n          this.errMsg = true\n          this.cl = 'alert-success'\n          this.msg = \"Calendar survey added successfully\"\n        }\n        \n        this.startDate= null\n        this.endDate= null\n        this.intervalDays=1 \n        this.SurveySelected= null\n        this.description = \"\"\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(\"surveys\", [\"getScheduleTasksByStudy\",\"getSurveysData\",\"getScheduleTasksByUser\"]),\n    calendarMonthItems() {\n      let tasks = this.$route.query.userId ?\n                  this.getScheduleTasksByUser(this.studyId,this.$route.query.userId)\n                  : this.getScheduleTasksByStudy(this.studyId);\n      let items = [];\n      for (const [key, value] of Object.entries(tasks)) {\n        if (value) {\n          value.scheduleElements.forEach((schedule) => {\n            let title = value.title;\n            if (schedule.text) {\n              title = schedule.text\n            }\n            if (schedule.startTime) {\n              let startTime = schedule.startTime.toDate();\n              let startTimeDay = new Date(startTime.getTime());\n              startTimeDay.setHours(0);\n              let endTime = new Date(this.displayLastDate.getTime());\n              if (schedule.endTime) {\n                if (schedule.endTime.toDate()<this.displayLastDate){\n                  endTime = schedule.endTime.toDate();\n                }\n              }\n              if (this.isTaskInMonth(startTime, endTime)) {\n                let intervalDays = schedule.interval.day;\n                if (startTimeDay < this.displayFirstDate) {\n                  let Difference_In_Time =\n                    this.displayFirstDate.getTime() - startTimeDay.getTime();\n                  let Difference_In_Days =\n                    Difference_In_Time / (1000 * 3600 * 24);\n                  let offset = Difference_In_Days % intervalDays;\n                  startTimeDay.setDate(\n                    this.displayFirstDate.getDate() + offset\n                  );\n                }\n                let _date = new Date(startTimeDay.getTime());\n                while (_date < endTime) {\n                  items.push({\n                    id: \"e5\",\n                    startDate: new Date(_date.getTime()),\n                    title: title,\n                  });\n                  _date.setDate(_date.getDate() + parseInt(intervalDays));\n                }\n              }\n            }\n          });\n        }\n      }\n      return items;\n    },\n    tableItems() {\n      let tasks = this.$route.query.userId ?\n                  this.getScheduleTasksByUser(this.studyId,this.$route.query.userId)\n                  : this.getScheduleTasksByStudy(this.studyId);\n      let items = [];\n      for (const [_, value] of Object.entries(tasks)) {\n        if (value) {\n          value.scheduleElements.forEach((schedule) => {\n            let title = value.title;\n            let identifier = value.id;\n            if (schedule.text) {\n                title = schedule.text;\n            }\n            if(schedule.targetValues){\n              if(schedule.targetValues.length>0){\n                identifier = schedule.targetValues[0].groupIdentifier\n              }\n            }\n\n            let startDate = null;\n            let endDate = null;\n            if (schedule.startTime) {\n              startDate = schedule.startTime\n                .toDate()\n                .toLocaleString(\"en-US\", { timeZone: \"UTC\" });\n            }\n            if (schedule.endTime) {\n              endDate = schedule.endTime\n                .toDate()\n                .toLocaleString(\"en-US\", { timeZone: \"UTC\" });\n            }\n            let intervalDays = schedule.interval.day;\n\n            items.push({\n              name: title,\n              identifier: identifier,\n              startDate: startDate,\n              endDate: endDate,\n              interval: intervalDays + \" days\",\n            });\n          });\n        }\n      }\n      return items;\n    },\n    surveys() {\n      let types = [];\n      let surveys = this.getSurveysData(this.studyId);\n      for (const [key, value] of Object.entries(surveys)) {\n        types.push({ id: key, name: value.data.title, value: key });\n      }\n      return types;\n    },\n  },\n  beforeRouteEnter(to, from, next) {\n    if(to.query.userId){\n      Promise.all([\n        store.dispatch(\"surveys/FetchUserScheduler\", {\n          studyId: to.params.studyId,\n          userId: to.query.userId\n        }),\n        store.dispatch(\"surveys/FetchAllSurveysData\", {\n          studyId: to.params.studyId\n        })\n      ]).then(() => {\n        next();\n      });\n    }\n    else{\n      Promise.all([\n        store.dispatch(\"surveys/FetchStudyScheduler\", {\n          studyId: to.params.studyId,\n        }),\n        store.dispatch(\"surveys/FetchAllSurveysData\", {\n          studyId: to.params.studyId,\n        })\n      ]).then(() => {\n        next();\n      });\n    }   \n  }\n};\n</script>\n<style>\n\n.cv-header {\n  display: flex;\n  flex: 0 1 auto;\n  align-items: center;\n  flex-direction: column-reverse;\n  min-height: 2.5em;\n  border-width: 1px 1px 0 1px;\n}\n.cv-header-nav {\n  display: flex;\n}\n.theme-default .cv-header button {\n  color: #ffffff;\n}\n.theme-default .cv-header .periodLabel {\n  text-transform: capitalize;\n}\n\n.theme-default .cv-day.past {\n  background-color: #fafafa;\n  width: 180px;\n  height: 200px;\n}\n\n.cv-weeks {\n  height: 550px;\n}\n.modal-content {\n  text-align: left;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}