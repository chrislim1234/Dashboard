{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2fa8ca84\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"page\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mb-5\"\n}, \"Users\", -1));\n\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_loading_icon = _resolveComponent(\"loading-icon\");\n\n  const _component_alt_table = _resolveComponent(\"alt-table\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_alt_table, {\n    columns: $data.columns,\n    pagination: \"\",\n    paginationOptions: $options.paginationOptions,\n    onOnPagination: $options.handlePagination\n  }, {\n    \"t-row\": _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getPageItems, user => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: user.id\n      }, [_createElementVNode(\"td\", null, _toDisplayString(user.id), 1), _createElementVNode(\"td\", null, _toDisplayString(user.email), 1), _createElementVNode(\"td\", null, _toDisplayString(user.studyId), 1), _createElementVNode(\"td\", null, [$data.loadingId == user.id ? (_openBlock(), _createBlock(_component_loading_icon, {\n        key: 0,\n        size: \"3px\"\n      })) : (_openBlock(), _createElementBlock(\"span\", {\n        key: 1,\n        class: \"pointer btn-view\",\n        onClick: $event => $options.handleSelecPatient(user)\n      }, \" View \", 8, _hoisted_3))])]);\n    }), 128))]),\n    _: 1\n  }, 8, [\"columns\", \"paginationOptions\", \"onOnPagination\"])]);\n}","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/share/extraUsers.vue"],"names":[],"mappings":";;;;;EACK,KAAK,EAAC;;;gEACX,mBAAA,CAA2B,IAA3B,EAA2B;EAAvB,KAAK,EAAC;AAAiB,CAA3B,EAAiB,OAAjB,EAAsB,CAAA,CAAtB,C;;;;;;;;uBADA,mBAAA,CA0BM,KA1BN,EAAA,UAAA,EA0BM,CAzBN,UAyBM,EAxBL,YAAA,CAuBe,oBAvBf,EAuBe;IAvBH,OAAO,EAAE,KAAA,CAAA,OAuBN;IAvBe,UAAU,EAAV,EAuBf;IAtBT,iBAAiB,EAAE,QAAA,CAAA,iBAsBV;IArBT,cAAY,EAAE,QAAA,CAAA;EAqBL,CAvBf,E;IAIc,SAAK,QAAA,CACV,MAA4B,E,kBAAhC,mBAAA,CAgBK,SAhBL,EAgBK,IAhBL,EAgBK,WAAA,CAhBc,QAAA,CAAA,YAgBd,EAhBM,IAAoB,IAAhB;2BAAf,mBAAA,CAgBK,IAhBL,EAgBK;QAhB6B,GAAG,EAAE,IAAI,CAAC;MAgBvC,CAhBL,E,CACA,mBAAA,CAEK,IAFL,EAEK,IAFL,EAEK,gBAAA,CADH,IAAI,CAAC,EACF,CAFL,EACS,CADT,C,EAGA,mBAAA,CAEK,IAFL,EAEK,IAFL,EAEK,gBAAA,CADH,IAAI,CAAC,KACF,CAFL,EACY,CADZ,C,EAGA,mBAAA,CAEK,IAFL,EAEK,IAFL,EAEK,gBAAA,CADH,IAAI,CAAC,OACF,CAFL,EACc,CADd,C,EAGE,mBAAA,CAKK,IALL,EAKK,IALL,EAKK,CAJmB,KAAA,CAAA,SAAA,IAAa,IAAI,CAAC,E,kBAAtC,YAAA,CAAsD,uBAAtD,EAAsD;cAAA;QAAZ,IAAI,EAAC;MAAO,CAAtD,C,mBACA,mBAAA,CAEO,MAFP,EAEO;cAAA;QAFM,KAAK,EAAC,kBAEZ;QAFgC,OAAK,EAAA,MAAA,IAAE,QAAA,CAAA,kBAAA,CAAmB,IAAnB;MAEvC,CAFP,EAAwE,QAAxE,EAEA,CAFA,EAEA,UAFA,C,CAGC,CALL,C,CAVF,C;KAgBK,CAhBL,E,GAAA,CAAgC,EADlB,C;;GAJnB,E,CAAA,E,kDAAA,CAwBK,CA1BN,C","sourcesContent":["<template>\n<div class=\"page\">\n<h1 class=\"mb-5\">Users</h1>\n <alt-table :columns=\"columns\" pagination \n      :paginationOptions=\"paginationOptions\"\n      @onPagination=\"handlePagination\"\n    >\n    <template #t-row>\n      <tr v-for=\"user in getPageItems\" :key=\"user.id\">\n      <td>\n      {{user.id}}\n      </td>\n      <td>\n      {{user.email}}\n      </td>\n      <td>\n      {{user.studyId}}\n      </td>\n        <td >\n            <loading-icon v-if=\"loadingId == user.id\" size=\"3px\"/>\n            <span v-else class=\"pointer btn-view\" @click=\"handleSelecPatient(user)\">\n              View\n            </span>\n        </td>\n      </tr>\n    </template>\n    </alt-table>\n</div>\n</template>\n\n<script>\n\n\nimport altTable from '@/components/tables/altTable';\nimport modal from \"@/components/modals/modal.vue\";\nimport loadingIcon from \"@/components/loading\";\nimport {mapGetters} from 'vuex'\n\nexport default {\n    data(){\n        return{\n            columns: [{header: 'User Id'},{header: 'Email'},{header: 'Study'}, {header: 'Actions'}],\n            currentPage: 1,\n            limit: 10,\n            loadingId : 0,\n        }\n    },\n    components: {\n        altTable,\n        modal,\n      loadingIcon,\n    },\n    computed:{\n        ...mapGetters(\"share\",[\"getUsersIHaveAccessTo\"]),\n        paginationOptions() {\n            return {\n                limit: [10, 20],\n                total: this.getUsersIHaveAccessTo.length,\n                currentPage: this.currentPage,\n            };\n        },\n        getPageItems() {\n            if (this.getUsersIHaveAccessTo){\n                let items = this.getUsersIHaveAccessTo;\n                let lowerLimit = (this.currentPage - 1) * this.limit;\n                let upperLimit = this.currentPage * this.limit;\n                return items.slice(lowerLimit, upperLimit);\n            }\n            return {}\n        },\n    },\n    methods:{\n        handlePagination(pagination) {\n            this.currentPage=pagination.currentPage\n            this.limit=pagination.limit\n            let total = this.getUsersIHaveAccessTo.length\n            if(this.currentPage > Math.ceil(total/this.limit)){\n                this.currentPage = Math.ceil(total/this.limit)\n            }\n        },\n        handleSelecPatient(user){\n            this.loadingId = user.id\n            this.$router.push({name: \"healthUser\", query: {studyId: user.studyId, userId: user.id }})\n        }, \n    },\n   \n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n  .btn-view{\n    padding: 0.4rem 1.8em;\n    background: #b71540;\n    color: white;\n  }\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}