{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport altTable from '@/components/tables/altTable';\nimport modal from \"@/components/modals/modal.vue\";\nimport loadingIcon from \"@/components/loading\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      columns: [{\n        header: 'User Id'\n      }, {\n        header: 'Email'\n      }, {\n        header: 'Study'\n      }, {\n        header: 'Actions'\n      }],\n      currentPage: 1,\n      limit: 10,\n      loadingId: 0\n    };\n  },\n\n  components: {\n    altTable,\n    modal,\n    loadingIcon\n  },\n  computed: { ...mapGetters(\"share\", [\"getUsersIHaveAccessTo\"]),\n\n    paginationOptions() {\n      return {\n        limit: [10, 20],\n        total: this.getUsersIHaveAccessTo.length,\n        currentPage: this.currentPage\n      };\n    },\n\n    getPageItems() {\n      if (this.getUsersIHaveAccessTo) {\n        let items = this.getUsersIHaveAccessTo;\n        let lowerLimit = (this.currentPage - 1) * this.limit;\n        let upperLimit = this.currentPage * this.limit;\n        return items.slice(lowerLimit, upperLimit);\n      }\n\n      return {};\n    }\n\n  },\n  methods: {\n    handlePagination(pagination) {\n      this.currentPage = pagination.currentPage;\n      this.limit = pagination.limit;\n      let total = this.getUsersIHaveAccessTo.length;\n\n      if (this.currentPage > Math.ceil(total / this.limit)) {\n        this.currentPage = Math.ceil(total / this.limit);\n      }\n    },\n\n    handleSelecPatient(user) {\n      this.loadingId = user.id;\n      this.$router.push({\n        name: \"healthUser\",\n        query: {\n          studyId: user.studyId,\n          userId: user.id\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/share/extraUsers.vue"],"names":[],"mappings":";AAiCA,OAAO,QAAP,MAAqB,8BAArB;AACA,OAAO,KAAP,MAAkB,+BAAlB;AACA,OAAO,WAAP,MAAwB,sBAAxB;AACA,SAAQ,UAAR,QAAyB,MAAzB;AAEA,eAAe;EACX,IAAI,GAAE;IACF,OAAM;MACF,OAAO,EAAE,CAAC;QAAC,MAAM,EAAE;MAAT,CAAD,EAAqB;QAAC,MAAM,EAAE;MAAT,CAArB,EAAuC;QAAC,MAAM,EAAE;MAAT,CAAvC,EAA0D;QAAC,MAAM,EAAE;MAAT,CAA1D,CADP;MAEF,WAAW,EAAE,CAFX;MAGF,KAAK,EAAE,EAHL;MAIF,SAAQ,EAAI;IAJV,CAAN;EAMH,CARU;;EASX,UAAU,EAAE;IACR,QADQ;IAER,KAFQ;IAGV;EAHU,CATD;EAcX,QAAQ,EAAC,EACL,GAAG,UAAU,CAAC,OAAD,EAAS,CAAC,uBAAD,CAAT,CADR;;IAEL,iBAAiB,GAAG;MAChB,OAAO;QACH,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,CADJ;QAEH,KAAK,EAAE,KAAK,qBAAL,CAA2B,MAF/B;QAGH,WAAW,EAAE,KAAK;MAHf,CAAP;IAKH,CARI;;IASL,YAAY,GAAG;MACX,IAAI,KAAK,qBAAT,EAA+B;QAC3B,IAAI,KAAI,GAAI,KAAK,qBAAjB;QACA,IAAI,UAAS,GAAI,CAAC,KAAK,WAAL,GAAmB,CAApB,IAAyB,KAAK,KAA/C;QACA,IAAI,UAAS,GAAI,KAAK,WAAL,GAAmB,KAAK,KAAzC;QACA,OAAO,KAAK,CAAC,KAAN,CAAY,UAAZ,EAAwB,UAAxB,CAAP;MACJ;;MACA,OAAO,EAAP;IACH;;EAjBI,CAdE;EAiCX,OAAO,EAAC;IACJ,gBAAgB,CAAC,UAAD,EAAa;MACzB,KAAK,WAAL,GAAiB,UAAU,CAAC,WAA5B;MACA,KAAK,KAAL,GAAW,UAAU,CAAC,KAAtB;MACA,IAAI,KAAI,GAAI,KAAK,qBAAL,CAA2B,MAAvC;;MACA,IAAG,KAAK,WAAL,GAAmB,IAAI,CAAC,IAAL,CAAU,KAAK,GAAC,KAAK,KAArB,CAAtB,EAAkD;QAC9C,KAAK,WAAL,GAAmB,IAAI,CAAC,IAAL,CAAU,KAAK,GAAC,KAAK,KAArB,CAAnB;MACJ;IACH,CARG;;IASJ,kBAAkB,CAAC,IAAD,EAAM;MACpB,KAAK,SAAL,GAAiB,IAAI,CAAC,EAAtB;MACA,KAAK,OAAL,CAAa,IAAb,CAAkB;QAAC,IAAI,EAAE,YAAP;QAAqB,KAAK,EAAE;UAAC,OAAO,EAAE,IAAI,CAAC,OAAf;UAAwB,MAAM,EAAE,IAAI,CAAC;QAArC;MAA5B,CAAlB;IACH;;EAZG;AAjCG,CAAf","sourcesContent":["<template>\n<div class=\"page\">\n<h1 class=\"mb-5\">Users</h1>\n <alt-table :columns=\"columns\" pagination \n      :paginationOptions=\"paginationOptions\"\n      @onPagination=\"handlePagination\"\n    >\n    <template #t-row>\n      <tr v-for=\"user in getPageItems\" :key=\"user.id\">\n      <td>\n      {{user.id}}\n      </td>\n      <td>\n      {{user.email}}\n      </td>\n      <td>\n      {{user.studyId}}\n      </td>\n        <td >\n            <loading-icon v-if=\"loadingId == user.id\" size=\"3px\"/>\n            <span v-else class=\"pointer btn-view\" @click=\"handleSelecPatient(user)\">\n              View\n            </span>\n        </td>\n      </tr>\n    </template>\n    </alt-table>\n</div>\n</template>\n\n<script>\n\n\nimport altTable from '@/components/tables/altTable';\nimport modal from \"@/components/modals/modal.vue\";\nimport loadingIcon from \"@/components/loading\";\nimport {mapGetters} from 'vuex'\n\nexport default {\n    data(){\n        return{\n            columns: [{header: 'User Id'},{header: 'Email'},{header: 'Study'}, {header: 'Actions'}],\n            currentPage: 1,\n            limit: 10,\n            loadingId : 0,\n        }\n    },\n    components: {\n        altTable,\n        modal,\n      loadingIcon,\n    },\n    computed:{\n        ...mapGetters(\"share\",[\"getUsersIHaveAccessTo\"]),\n        paginationOptions() {\n            return {\n                limit: [10, 20],\n                total: this.getUsersIHaveAccessTo.length,\n                currentPage: this.currentPage,\n            };\n        },\n        getPageItems() {\n            if (this.getUsersIHaveAccessTo){\n                let items = this.getUsersIHaveAccessTo;\n                let lowerLimit = (this.currentPage - 1) * this.limit;\n                let upperLimit = this.currentPage * this.limit;\n                return items.slice(lowerLimit, upperLimit);\n            }\n            return {}\n        },\n    },\n    methods:{\n        handlePagination(pagination) {\n            this.currentPage=pagination.currentPage\n            this.limit=pagination.limit\n            let total = this.getUsersIHaveAccessTo.length\n            if(this.currentPage > Math.ceil(total/this.limit)){\n                this.currentPage = Math.ceil(total/this.limit)\n            }\n        },\n        handleSelecPatient(user){\n            this.loadingId = user.id\n            this.$router.push({name: \"healthUser\", query: {studyId: user.studyId, userId: user.id }})\n        }, \n    },\n   \n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n  .btn-view{\n    padding: 0.4rem 1.8em;\n    background: #b71540;\n    color: white;\n  }\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}