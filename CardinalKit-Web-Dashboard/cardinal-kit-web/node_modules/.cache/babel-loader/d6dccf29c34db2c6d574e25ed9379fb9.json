{"ast":null,"code":"import { computed, ref, watch } from 'vue';\nexport default {\n  props: {\n    pagination: {\n      type: Object,\n      default: {\n        limit: [10, 20],\n        total: 30,\n        currentPage: 1\n      }\n    }\n  },\n\n  setup(props, ctx) {\n    const limit = ref(10);\n    const currentPage = ref(props.pagination.current || 1);\n    const pages = computed(() => Array.from({\n      length: getCountPage()\n    }, (_, i) => i + 1));\n    const range = computed(() => calculateRange(currentPage.value, limit.value, props.pagination.total));\n\n    const getCountPage = () => Math.ceil(props.pagination.total / limit.value);\n\n    function calculateRange(page, limit, total) {\n      const initRange = page * limit - limit + 1;\n      const finalRange = isLastPage(page) ? total : limit * page;\n      return `${initRange}-${finalRange}`;\n    }\n\n    const isLastPage = page => pages.value.length === page;\n\n    watch([limit, currentPage], () => {\n      const values = {\n        currentPage: currentPage.value,\n        limit: limit.value\n      };\n      ctx.emit('onChangePagination', { ...values\n      });\n    });\n    return {\n      limit,\n      currentPage,\n      pages,\n      range\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/tables/Pagination.vue"],"names":[],"mappings":"AAqBA,SAAS,QAAT,EAAmB,GAAnB,EAAwB,KAAxB,QAAqC,KAArC;AACA,eAAe;EACb,KAAK,EAAC;IACJ,UAAU,EAAE;MACV,IAAI,EAAE,MADI;MAEV,OAAO,EAAE;QACP,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,CADA;QAEP,KAAK,EAAE,EAFA;QAGP,WAAW,EAAE;MAHN;IAFC;EADR,CADO;;EAWb,KAAK,CAAC,KAAD,EAAQ,GAAR,EAAa;IAChB,MAAM,KAAI,GAAI,GAAG,CAAC,EAAD,CAAjB;IACA,MAAM,WAAU,GAAI,GAAG,CAAC,KAAK,CAAC,UAAN,CAAiB,OAAjB,IAA4B,CAA7B,CAAvB;IACA,MAAM,KAAI,GAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAN,CAAW;MAAC,MAAM,EAAE,YAAY;IAArB,CAAX,EAAsC,CAAC,CAAD,EAAI,CAAJ,KAAU,CAAC,GAAC,CAAlD,CAAP,CAAtB;IACA,MAAM,KAAI,GAAI,QAAQ,CAAC,MAAM,cAAc,CAAC,WAAW,CAAC,KAAb,EAAoB,KAAK,CAAC,KAA1B,EAAiC,KAAK,CAAC,UAAN,CAAiB,KAAlD,CAArB,CAAtB;;IAEA,MAAM,YAAW,GAAI,MAAO,IAAI,CAAC,IAAL,CAAU,KAAK,CAAC,UAAN,CAAiB,KAAjB,GAAyB,KAAK,CAAC,KAAzC,CAA5B;;IAEA,SAAS,cAAT,CAAwB,IAAxB,EAA8B,KAA9B,EAAqC,KAArC,EAA4C;MAC1C,MAAM,SAAQ,GAAM,IAAI,GAAC,KAAN,GAAe,KAAf,GAAuB,CAA1C;MACA,MAAM,UAAS,GAAI,UAAU,CAAC,IAAD,CAAV,GAAmB,KAAnB,GAA2B,KAAK,GAAC,IAApD;MACA,OAAQ,GAAE,SAAU,IAAG,UAAW,EAAlC;IACF;;IAEA,MAAM,UAAS,GAAK,IAAD,IAAW,KAAK,CAAC,KAAN,CAAY,MAAZ,KAAuB,IAArD;;IAEA,KAAK,CAAC,CAAC,KAAD,EAAQ,WAAR,CAAD,EAAsB,MAAM;MAC/B,MAAM,MAAK,GAAI;QACb,WAAW,EAAE,WAAW,CAAC,KADZ;QAEb,KAAK,EAAE,KAAK,CAAC;MAFA,CAAf;MAIA,GAAG,CAAC,IAAJ,CAAS,oBAAT,EAA+B,EAAE,GAAG;MAAL,CAA/B;IACD,CANI,CAAL;IAQA,OAAO;MACL,KADK;MAEL,WAFK;MAGL,KAHK;MAIL;IAJK,CAAP;EAMF;;AAzCa,CAAf","sourcesContent":["<template>\n  <div class=\"pagination\">\n    <div class=\"flex mr-2 align-center pagination-child\">\n      <label class=\"mr-1 pagination-label\">Items per page</label>\n      <select class=\"select-table\" name=\"limit\" v-model=\"limit\">    \n        <option v-for=\"(value, index) in pagination.limit\" :key=\"index\" :value=\"value\">{{value}}</option>\n      </select>\n    </div>\n    <div class=\"flex mr-2 pagination-child\">\n      <p>{{range}} of {{pagination.total}} </p>\n    </div>\n    <div class=\"flex align-center pagination-child\">\n    <p>Page: </p>\n      <select class=\"select-table\" name=\"page\" v-model=\"currentPage\">\n        <option v-for=\"(page, index) in pages\" :key=\"index\" :value=\"page\">{{page}}</option>\n      </select>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, ref, watch } from 'vue';\nexport default {\n  props:{\n    pagination: {\n      type: Object,\n      default: {\n        limit: [10, 20],\n        total: 30,\n        currentPage: 1\n      }\n    }\n  },\n  setup(props, ctx) {\n    const limit = ref(10);\n    const currentPage = ref(props.pagination.current || 1);\n    const pages = computed(() => Array.from({length: getCountPage() }, (_, i) => i+1));\n    const range = computed(() => calculateRange(currentPage.value, limit.value, props.pagination.total));\n\n    const getCountPage = () => (Math.ceil(props.pagination.total / limit.value));\n    \n    function calculateRange(page, limit, total) {\n      const initRange = ((page*limit) - limit + 1);\n      const finalRange = isLastPage(page) ? total : limit*page;\n      return `${initRange}-${finalRange}`\n    }\n\n    const isLastPage = (page) => (pages.value.length === page);\n\n    watch([limit, currentPage],() => {\n      const values = {\n        currentPage: currentPage.value,\n        limit: limit.value\n      }\n      ctx.emit('onChangePagination', { ...values })\n    });\n\n    return {\n      limit,\n      currentPage,\n      pages,\n      range\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.select-table {\n    padding: 3px 1rem;\n    border: none;\n    border-bottom: solid;\n    border-radius: 5px;\n    border-color: $light-grey;\n    outline: none;\n    width: 70px;\n  }\n  \n.pagination {\n  padding: .5rem 1rem;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  border-top: 1px solid;\n  font-size: 10pt;\n  border-color: $light-grey;\n\n  @media (max-width: 520px) {\n    &-child {\n      justify-content: center;\n      width: 100%;\n      padding: .3rem 0;\n      border-color: $light-grey;\n    }\n\n    &-label {\n      display: none;\n    }\n\n    .select-table {\n      width: 100%; \n    }\n  }\n}\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}