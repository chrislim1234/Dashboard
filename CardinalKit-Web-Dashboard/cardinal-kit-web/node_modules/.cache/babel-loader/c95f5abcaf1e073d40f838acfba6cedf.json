{"ast":null,"code":"export default {\n  data: () => ({\n    errors: {}\n  }),\n  props: {\n    Options: Object\n  },\n  methods: {\n    classError(value) {\n      if (this.errors[value]) {\n        return \"TextInput input-no-value-style\";\n      }\n\n      return \"TextInput\";\n    },\n\n    checkQuestion() {\n      this.errors = {};\n      let error = false;\n      let msg = \"\";\n\n      if (this.Options.yesText == \"\" || this.Options.noText == \"\") {\n        error = true;\n        msg = \"The fields can't be blank\";\n        this.errors[\"yes\"] = true;\n      }\n\n      if (this.Options.yesText == undefined || this.Options.noText == undefined) {\n        error = true;\n        msg = \"The fields can't be blank\";\n        this.errors[\"no\"] = true;\n      }\n\n      return {\n        \"error\": error,\n        \"msg\": msg\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/surveys/SurveyBuilder/questionsTypes/Boolean.vue"],"names":[],"mappings":"AA6BA,eAAe;EACb,IAAI,EAAC,OAAO;IACV,MAAM,EAAC;EADG,CAAP,CADQ;EAIb,KAAK,EAAE;IACL,OAAO,EAAE;EADJ,CAJM;EAOb,OAAO,EAAC;IACN,UAAU,CAAC,KAAD,EAAO;MACf,IAAG,KAAK,MAAL,CAAY,KAAZ,CAAH,EAAsB;QACpB,OAAO,gCAAP;MACF;;MACA,OAAO,WAAP;IACD,CANK;;IAON,aAAa,GAAE;MACb,KAAK,MAAL,GAAY,EAAZ;MACA,IAAI,KAAI,GAAI,KAAZ;MACA,IAAI,GAAE,GAAI,EAAV;;MACA,IAAG,KAAK,OAAL,CAAa,OAAb,IAAwB,EAAxB,IAA8B,KAAK,OAAL,CAAa,MAAb,IAAuB,EAAxD,EAA4D;QAC1D,KAAI,GAAI,IAAR;QACA,GAAE,GAAI,2BAAN;QACA,KAAK,MAAL,CAAY,KAAZ,IAAmB,IAAnB;MACF;;MAEA,IAAG,KAAK,OAAL,CAAa,OAAb,IAAwB,SAAxB,IAAqC,KAAK,OAAL,CAAa,MAAb,IAAuB,SAA/D,EAAyE;QACvE,KAAI,GAAI,IAAR;QACA,GAAE,GAAI,2BAAN;QACA,KAAK,MAAL,CAAY,IAAZ,IAAkB,IAAlB;MACF;;MAIA,OAAO;QAAC,SAAQ,KAAT;QAAe,OAAM;MAArB,CAAP;IACF;;EA1BM;AAPK,CAAf","sourcesContent":["<template>\n<div>\n    <br />\n    <br />\n    <label>Answer Choices</label>\n    <br />\n    <input\n      v-model=\"Options.yesText\"\n      :name=\"`\n      options[${Options.id}][options]`\"\n      type=\"text\"\n      placeholder=\"Yes\"\n      :class=\"classError('yes')\"\n    />\n    <br />\n    <br />\n\n    <input\n      v-model=\"Options.noText\"\n      :name=\"`\n      options[${Options.id}][options]`\"\n      type=\"text\"\n      placeholder=\"No\"\n      :class=\"classError('no')\"\n    />\n</div>\n</template>\n\n<script>\nexport default {\n  data:() => ({\n    errors:{}\n  }),\n  props: {\n    Options: Object\n  },\n  methods:{\n    classError(value){\n      if(this.errors[value]){\n        return \"TextInput input-no-value-style\"\n      }\n      return \"TextInput\"\n    },\n    checkQuestion(){\n      this.errors={}\n      let error = false\n      let msg = \"\"\n      if(this.Options.yesText == \"\" || this.Options.noText == \"\" ){\n        error = true\n        msg = \"The fields can't be blank\"\n        this.errors[\"yes\"]=true\n      }\n\n      if(this.Options.yesText == undefined || this.Options.noText == undefined){\n        error = true\n        msg = \"The fields can't be blank\"\n        this.errors[\"no\"]=true\n      }\n\n\n\n      return {\"error\":error,\"msg\":msg};\n    }\n  }\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}