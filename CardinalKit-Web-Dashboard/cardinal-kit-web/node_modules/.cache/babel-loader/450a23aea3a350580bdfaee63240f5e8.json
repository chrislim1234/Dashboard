{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_bread_crumb = _resolveComponent(\"bread-crumb\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_bread_crumb, {\n    data: $options.breadCrumb,\n    userId: _ctx.$route.query.userId,\n    studyId: _ctx.$route.query.studyId\n  }, null, 8\n  /* PROPS */\n  , [\"data\", \"userId\", \"studyId\"]), _createVNode(_component_router_view)]);\n}","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/views/patients/healthKit/healthKitUser.vue"],"names":[],"mappings":";;;;;;uBACE,mBAAA,CASM,KATN,EASM,IATN,EASM,CARJ,YAAA,CAIc,sBAJd,EAIc;IAHX,IAAI,EAAE,QAAA,CAAA,UAGK;IAFX,MAAM,EAAE,IAAA,CAAA,MAAA,CAAO,KAAP,CAAa,MAEV;IADX,OAAO,EAAE,IAAA,CAAA,MAAA,CAAO,KAAP,CAAa;EACX,CAJd,E,IAAA,E;;EAAA,E,6BAAA,CAQI,EAFJ,YAAA,CAA2B,sBAA3B,CAEI,CATN,C","sourcesContent":["<template>\n  <div>\n    <bread-crumb \n      :data=\"breadCrumb\"\n      :userId=\"$route.query.userId\"\n      :studyId=\"$route.query.studyId\">\n    </bread-crumb>\n\n    <router-view></router-view>\n\n  </div>\n</template>\n\n<script>\nimport breadCrumb from \"@/components/breadcrumb.vue\"\nimport { mapGetters } from 'vuex';\nimport store from \"@/store\";\nexport default {\n  name: \"StudyDetail\",\n  components:{\n    breadCrumb,\n  },\n  data(){\n    return{\n      path: [\n        {label: \"Health Categories\", name: \"categories\"},\n        {label: \"Activity\", name:\"category\", param: \"categoryId\"},\n        {label: \"Statistics\", name: \"statistic\"},\n      ]\n    }\n  },\n  methods: {},\n  computed:{\n    ...mapGetters('patient',['getHealthData']),\n    getActivityIndexData(){\n      return \",\"\n    },\n    breadCrumb(){\n      let index = this.path.findIndex((obj) => obj.active)\n      return  this.path.slice(0, index+1);\n    }\n  },\n  created(){\n    let path = localStorage.getItem(\"path\");\n    if (path){\n      this.path = JSON.parse(path);\n    }\n   \n  },\n  beforeRouteEnter(to, from, next) {\n    console.log(\"enter\")\n    Promise.all([\n      store.dispatch(\"patient/FecthCategoryWithData\", {\n        studyId: `${to.query.studyId}`,\n        userId: `${to.query.userId}`\n      }),\n      store.dispatch(\"patient/FetchMetricsData\",{\n        studyId: `${to.query.studyId}`,\n        userId: `${to.query.userId}`\n      })\n    ]).then(() => {\n       let path = JSON.parse(localStorage.getItem(\"path\"));\n       if(path == null){\n         path = [\n          {label: \"Health Categories\", name: \"categories\"},\n          {label: \"Activity\", name:\"category\", param: \"categoryId\"},\n          {label: \"Statistics\", name: \"statistic\"},\n        ]\n       }\n       if(path!=null){\n        console.log(\"path\",path)\n          path.forEach(obj => {\n            console.log(to.name,\"name\")\n          obj.active = obj.name === to.name;\n          if (obj.param && to.params && obj.active){  \n            obj.params = to.params\n            obj.label = to.params[obj.param]\n          }\n          return obj\n        });\n        console.log(\"finalpath\",path)\n        localStorage.setItem(\"path\", JSON.stringify(path))\n      }\n      next();\n    });\n  },\n  beforeRouteUpdate(to, from, next) {\n    console.log(\"updated\")\n    this.path.forEach(obj => {\n      obj.active = obj.name === to.name;\n      if (obj.param && to.params && obj.active){  \n        obj.params = to.params\n        obj.label = to.params[obj.param]\n      }\n      return obj\n    });\n    localStorage.setItem(\"path\", JSON.stringify(this.path))\n    this.path = [...this.path]\n    next();\n  }\n};\n</script>\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}