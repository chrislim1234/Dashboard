{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, vShow as _vShow, createBlock as _createBlock, withDirectives as _withDirectives, createElementVNode as _createElementVNode, createVNode as _createVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1edf8612\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"page\"\n};\nconst _hoisted_2 = {\n  class: \"categories-grid\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"wrapper-graphs content\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Activity Index\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"7-day moving avg (steps/day)\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_category = _resolveComponent(\"category\");\n\n  const _component_alt_date = _resolveComponent(\"alt-date\");\n\n  const _component_line_chart = _resolveComponent(\"line-chart\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, category => {\n    return _withDirectives((_openBlock(), _createBlock(_component_category, {\n      data: category,\n      key: category.id,\n      userId: $data.userId,\n      studyId: $data.studyId,\n      icon: category.icon\n    }, null, 8\n    /* PROPS */\n    , [\"data\", \"userId\", \"studyId\", \"icon\"])), [[_vShow, _ctx.getValidCategories.includes(category.id)]]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), $options.showActivityIndex ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_alt_date, {\n    withCalendar: \"\",\n    defaultDate: $data.date,\n    range: \"\",\n    \"onUpdate:modelValue\": $options.handleChangeDate\n  }, null, 8\n  /* PROPS */\n  , [\"defaultDate\", \"onUpdate:modelValue\"]), _hoisted_4, _createElementVNode(\"div\", null, [_hoisted_5, (_openBlock(), _createBlock(_component_line_chart, {\n    ref: \"chart\",\n    id: \"line-chart\",\n    key: 1,\n    series: $options.filteredData\n  }, null, 8\n  /* PROPS */\n  , [\"series\"]))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/patients/healthKit/categoryList.vue"],"names":[],"mappings":";;;;;EACO,KAAK,EAAC;;;EACJ,KAAK,EAAC;;;;EAWN,KAAK,EAAC;;;gEAOT,mBAAA,CAAuB,IAAvB,EAAuB,IAAvB,EAAI,gBAAJ,EAAkB,CAAA;AAAA;AAAlB,C;;gEAEE,mBAAA,CAA0C,MAA1C,EAA0C,IAA1C,EAAO,8BAAP,EAAmC,CAAA;AAAA;AAAnC,C;;;;;;;;;uBArBN,mBAAA,CA+BM,KA/BN,EAAA,UAAA,EA+BM,CA9BJ,mBAAA,CAUM,KAVN,EAAA,UAAA,EAUM,E,kBATJ,mBAAA,CAQE,SARF,EAQE,IARF,EAQE,WAAA,CAPmB,KAAA,CAAA,UAOnB,EAPO,QAAsB,IAAd;0CADjB,YAAA,CAQE,mBARF,EAQE;MANC,IAAI,EAAE,QAMP;MALC,GAAG,EAAE,QAAQ,CAAC,EAKf;MAJC,MAAM,EAAE,KAAA,CAAA,MAIT;MAHC,OAAO,EAAE,KAAA,CAAA,OAGV;MAFC,IAAI,EAAE,QAAQ,CAAC;IAEhB,CARF,E,IAAA,E;;IAAA,E,qCAAA,C,aAOU,IAAA,CAAA,kBAAA,CAAmB,QAAnB,CAA4B,QAAQ,CAAC,EAArC,C;GACR,CARF,E;;EAAA,CASI,EAVN,CA8BI,EAnBsC,QAAA,CAAA,iB,kBAA1C,mBAAA,CAkBM,KAlBN,EAAA,UAAA,EAkBM,CAjBN,YAAA,CAKM,mBALN,EAKM;IAJA,YAAY,EAAZ,EAIA;IAHC,WAAW,EAAE,KAAA,CAAA,IAGd;IAFA,KAAK,EAAL,EAEA;IADC,uBAAoB,QAAA,CAAA;EACrB,CALN,E,IAAA,E;;EAAA,E,sCAAA,CAiBM,EAXJ,UAWI,EAVJ,mBAAA,CASM,KATN,EASM,IATN,EASM,CARJ,UAQI,G,cAPJ,YAAA,CAKE,qBALF,EAKE;IAJA,GAAG,EAAC,OAIJ;IAHA,EAAE,EAAC,YAGH;IAFC,GAAG,EAAE,CAEN;IADC,MAAM,EAAE,QAAA,CAAA;EACT,CALF,E,IAAA,E;;EAAA,E,UAAA,CAOI,EATN,CAUI,CAlBN,C,qCAmBI,CA/BN,C","sourcesContent":["<template>\n  <div class=\"page\">\n    <div class=\"categories-grid\">\n      <category\n        v-for=\"category in categories\"\n        :data=\"category\"\n        :key=\"category.id\"\n        :userId=\"userId\"\n        :studyId=\"studyId\"\n        :icon=\"category.icon\"\n        v-show=\"getValidCategories.includes(category.id)\"\n      />\n    </div>\n    <div class=\"wrapper-graphs content\" v-if=\"showActivityIndex\">\n    <alt-date\n          withCalendar\n          :defaultDate=\"date\"\n          range\n          @update:model-value=\"handleChangeDate\"\n        />\n      <h1>Activity Index</h1>\n      <div >\n        <span >7-day moving avg (steps/day)</span>\n        <line-chart\n          ref=\"chart\"\n          id=\"line-chart\"\n          :key=\"1\"\n          :series=\"filteredData\"\n        />\n       \n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport category from \"./categoryCard\";\nimport { CategoriesList } from '@/common/static_data'\nimport { mapGetters } from 'vuex';\nimport LineChart from \"@/components/apexCharts/LineChart\";\nimport AltDate from \"@/components/calendar/AltDate\";\n\nexport default {\n  name: \"categories\",\n  components: {\n    category,\n    CategoriesList,\n    LineChart,\n    AltDate\n  },\n  data(){\n    return{\n      date: { startDate: new Date(new Date().setDate(-30)) },\n      categories:[],\n      userId: this.$route.query.userId,\n      studyId: this.$route.query.studyId,\n      filteredIndexData: [ {name:\"ActivityIndex\",data:[]} ]\n    }\n  },\n  methods: {\n    async handleChangeDate(value) {\n      if(value){        \n        if(this.getActivityIndexDataToGraphic[0]){\n            let data = [...this.getActivityIndexDataToGraphic][0].data\n\n           let startTimeStamp = value.startDate.getTime()\n           let endTimeStamp = value.endDate.getTime()\n\n           let finalData = data.filter(function(element){\n             return (element.x > startTimeStamp && element.x < endTimeStamp)\n           })\n           await new Promise(resolve => setTimeout(resolve, 10));;\n           this.filteredIndexData=[ {name:\"ActivityIndex\",data:finalData} ]\n\n        }\n        \n      }\n      this.$refs.chart.zoomX(value.startDate, value.endDate);\n      \n    }\n  },\n  computed: {\n    ...mapGetters(\"patient\",[\"getValidCategories\", \"getActivityIndexDataToGraphic\"]),\n    showActivityIndex(){\n      let show = false\n      if(this.getActivityIndexDataToGraphic.length>0){\n        if(this.getActivityIndexDataToGraphic[0].data.length>0){\n          show=true\n        }\n      }\n      return show\n    },\n    filteredData(){\n      return [ {name:\"ActivityIndex\",data:this.filteredIndexData[0].data} ]\n    }\n  },\n  created(){\n    this.categories = CategoriesList\n    console.log(\"on\",this.getActivityIndexDataToGraphic)\n    this.filteredIndexData = [...this.getActivityIndexDataToGraphic]\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .width {\n    min-width: 340px;\n    max-width: 500px;\n  }\n  .box {\n    flex-wrap: wrap;\n  }\n  .categories-grid {\n    display: grid;\n    gap: 20px 40px;\n    grid-template-columns: repeat(2, minmax(300px, 1fr));\n    justify-content: center;\n    align-items: center;\n  }\n  .wrapper-graphs {\n    display: grid;\n    gap: 15px;\n    max-width: 1200px;\n    margin: auto;\n  }\n  @media (max-width: 360px) {\n    .content{\n      padding: 1rem;\n    }\n  }\n  @media (min-width: 361px) {\n    .content{\n      padding: 1rem 4rem;\n    }\n  }\n  @media (max-width: 672px) {\n    .categories-grid {\n      display: grid;\n      gap: 20px 40px;\n    }\n  }\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}