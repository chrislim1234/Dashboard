{"ast":null,"code":"import { auth, googleAuthProvider, appleAuthProvider, secondaryProvider } from \"@/plugins/firebase/firebase\";\nimport request from \"@/Rest\";\nexport function reset({\n  commit\n}) {\n  commit(\"RESET\");\n}\nexport async function SignIn({\n  commit\n}, payload) {\n  commit(\"cleanErrors\");\n  return await auth.signInWithEmailAndPassword(payload.email, payload.password).then(() => {\n    commit(\"isLogged\", true);\n    return {\n      isLogged: true\n    };\n  }).catch(error => {\n    commit(\"isLogged\", false);\n    var errorCode = error.code;\n    var errorMessage = error.message;\n\n    if (error.code == \"auth/network-request-failed\") {\n      commit(\"error\", \"No internet connection\");\n    } else {\n      commit(\"error\", \"The username or password is incorrect\");\n    }\n\n    return {\n      isLogged: false,\n      error: errorMessage,\n      errorCode: errorCode\n    };\n  });\n}\nexport async function LogInWithGoogle({\n  commit\n}) {\n  return auth.signInWithPopup(googleAuthProvider).then(() => {\n    commit(\"isLogged\", true);\n    return {\n      isLogged: true\n    };\n  }).catch(error => {\n    commit(\"isLogged\", false);\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    return {\n      isLogged: false,\n      error: errorMessage,\n      errorCode: errorCode\n    };\n  });\n}\nexport async function LogInWithAppleId({\n  commit\n}) {\n  return auth.signInWithPopup(appleAuthProvider).then(() => {\n    commit(\"isLogged\", true);\n    return {\n      isLogged: true\n    };\n  }).catch(error => {\n    commit(\"isLogged\", false);\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    return {\n      isLogged: false,\n      error: errorMessage,\n      errorCode: errorCode\n    };\n  });\n}\nexport function SignUp({\n  commit\n}, payload) {\n  auth.createUserWithEmailAndPassword(payload.email, payload.password).then(user => {// ...\n  }).catch(error => {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n  });\n}\nexport function SingUpNoPassword({\n  commit\n}, payload) {\n  const {\n    v4: uuidv4\n  } = require(\"uuid\");\n\n  console.log(\"payload\", payload);\n  return new Promise(function (resolve, reject) {\n    secondaryProvider.createUserWithEmailAndPassword(payload.email, uuidv4()).then(({\n      user\n    }) => {\n      secondaryProvider.sendPasswordResetEmail(payload.email).then(res => {\n        request.POST(`users_roles/${user.uid}`, {\n          data: {\n            rol: \"doctor\",\n            studies: payload.studies\n          }\n        }).Execute();\n        resolve();\n      }).catch(error => {\n        console.log(\"error in reset\", error);\n        reject(error.message);\n      });\n    }).catch(error => {\n      reject(error.message);\n    });\n  });\n}\nexport function Logout({\n  commit\n}, payload) {\n  auth.signOut().then(() => {\n    console.log(\"Logout\");\n    commit(\"isLogged\", false);\n  });\n}","map":{"version":3,"names":["auth","googleAuthProvider","appleAuthProvider","secondaryProvider","request","reset","commit","SignIn","payload","signInWithEmailAndPassword","email","password","then","isLogged","catch","error","errorCode","code","errorMessage","message","LogInWithGoogle","signInWithPopup","LogInWithAppleId","SignUp","createUserWithEmailAndPassword","user","SingUpNoPassword","v4","uuidv4","require","console","log","Promise","resolve","reject","sendPasswordResetEmail","res","POST","uid","data","rol","studies","Execute","Logout","signOut"],"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/store/modules/authFirebase/actions.js"],"sourcesContent":["import {\n  auth,\n  googleAuthProvider,\n  appleAuthProvider,\n  secondaryProvider,\n} from \"@/plugins/firebase/firebase\";\nimport request from \"@/Rest\";\n\nexport function reset({ commit }) {\n  commit(\"RESET\");\n}\n\nexport async function SignIn({ commit }, payload) {\n  commit(\"cleanErrors\")\n  return await auth\n    .signInWithEmailAndPassword(payload.email, payload.password)\n    .then(() => {\n      commit(\"isLogged\", true);\n      return {\n        isLogged: true,\n      };\n    })\n    .catch((error) => {\n      commit(\"isLogged\", false);\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      if(error.code == \"auth/network-request-failed\"){\n        commit(\"error\",\"No internet connection\")\n      }\n      else{\n        commit(\"error\",\"The username or password is incorrect\")\n      }\n      \n      return {\n        isLogged: false,\n        error: errorMessage,\n        errorCode: errorCode,\n      };\n    });\n}\n\nexport async function LogInWithGoogle({ commit }) {\n  return auth\n    .signInWithPopup(googleAuthProvider)\n    .then(() => {\n      commit(\"isLogged\", true);\n      return {\n        isLogged: true,\n      };\n    })\n    .catch((error) => {\n      commit(\"isLogged\", false);\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      return {\n        isLogged: false,\n        error: errorMessage,\n        errorCode: errorCode,\n      };\n    });\n}\n\nexport async function LogInWithAppleId({ commit }) {\n  return auth\n    .signInWithPopup(appleAuthProvider)\n    .then(() => {\n      commit(\"isLogged\", true);\n      return {\n        isLogged: true,\n      };\n    })\n    .catch((error) => {\n      commit(\"isLogged\", false);\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      return {\n        isLogged: false,\n        error: errorMessage,\n        errorCode: errorCode,\n      };\n    });\n}\n\nexport function SignUp({ commit }, payload) {\n  auth\n    .createUserWithEmailAndPassword(payload.email, payload.password)\n    .then((user) => {\n      // ...\n    })\n    .catch((error) => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n}\n\nexport function SingUpNoPassword({ commit }, payload) {\n  const { v4: uuidv4 } = require(\"uuid\");\n  console.log(\"payload\", payload);\n  return new Promise(function(resolve, reject) {\n    secondaryProvider\n      .createUserWithEmailAndPassword(payload.email, uuidv4())\n      .then(({ user }) => {\n        secondaryProvider\n          .sendPasswordResetEmail(payload.email)\n          .then((res) => {\n            request\n              .POST(`users_roles/${user.uid}`, {\n                data: { rol: \"doctor\", studies: payload.studies },\n              })\n              .Execute();\n              resolve();\n          })\n          .catch((error) => {\n            console.log(\"error in reset\", error);\n            reject(error.message)\n          });\n      })\n      .catch((error) => {\n        reject(error.message)\n      });\n  });\n}\n\nexport function Logout({ commit }, payload) {\n  auth.signOut().then(() => {\n    console.log(\"Logout\");\n    commit(\"isLogged\", false);\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}