{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_study_list = _resolveComponent(\"study-list\");\n\n  const _component_extra_users = _resolveComponent(\"extra-users\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_study_list, {\n    studies: _ctx.getUserStudies,\n    handleSelecStudy: $options.handleSelecStudy\n  }, null, 8\n  /* PROPS */\n  , [\"studies\", \"handleSelecStudy\"]), _ctx.getUsersIHaveAccessTo.length > 0 ? (_openBlock(), _createBlock(_component_extra_users, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _hoisted_1]);\n}","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/views/studies/studiesList.vue"],"names":[],"mappings":";;gCAOI,mBAAA,CAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM,CAAA;AAAA;AAAN,C;;;;;;;uBANF,mBAAA,CAOM,KAPN,EAOM,IAPN,EAOM,CANJ,YAAA,CAGE,qBAHF,EAGE;IAFC,OAAO,EAAE,IAAA,CAAA,cAEV;IADC,gBAAgB,EAAE,QAAA,CAAA;EACnB,CAHF,E,IAAA,E;;EAAA,E,+BAAA,CAMI,EAFe,IAAA,CAAA,qBAAA,CAAsB,MAAtB,GAA4B,C,kBAA/C,YAAA,CAAoD,sBAApD,EAAoD;IAAA,GAAA,EAAA;EAAA,CAApD,C,qCAEI,EADJ,UACI,CAPN,C","sourcesContent":["<template>\n  <div>\n    <study-list\n      :studies=\"getUserStudies\"\n      :handleSelecStudy=\"handleSelecStudy\"\n    />\n    <extra-users v-if=\"getUsersIHaveAccessTo.length>0\"/>\n    <br />\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from \"vuex\";\nimport store from \"@/store\";\n\n//Components\nimport studyList from \"@/components/studies/studiesList\";\nimport extraUsers from \"@/components/share/extraUsers\";\n\nexport default {\n  name: \"Home\",\n  components: {\n    studyList,\n    extraUsers,\n  },\n  computed: {\n    ...mapGetters(\"user\", [\"getUserStudies\",\"getUserRol\",\"getUserId\"]),\n    ...mapGetters(\"share\",[\"getUsersIHaveAccessTo\"]),\n  },\n  methods: {\n    handleSelecStudy(studyId) {\n      this.studySelected = studyId;\n\n      if (this.getUserRol == \"doctor\" || this.getUserRol==\"superAdmin\") {\n        this.$router.push(`/patients/${studyId}`)\n\n      } else {\n        this.$router.push({ name: \"healthUser\", query: {studyId, userId: this.getUserId}})\n      }\n    },\n  },\n  mounted() {\n    if (this.getUserStudies.length == 1) {\n      if (this.getUserRol == \"user\") {\n        this.$router.push({ name: \"healthUser\", query: {studyId: this.getUserStudies[0], userId: this.getUserId}})\n      } else {\n        this.$router.push(`/patients/${this.getUserStudies[0]}`)\n      }\n    }\n  },\n  beforeRouteEnter(to, from, next) {\n    Promise.all([\n      store.dispatch(\"user/FetchUserRolesAndStudies\")],\n      store.dispatch(\"share/FetchUsersIHaveAccessTo\")\n      ).then(() => {\n      next();\n    });\n  },\n};\n</script>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}