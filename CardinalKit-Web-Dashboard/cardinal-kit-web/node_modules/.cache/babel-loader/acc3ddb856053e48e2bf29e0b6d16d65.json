{"ast":null,"code":"export default {\n  props: {\n    Options: Object\n  },\n  data: () => ({\n    errors: {}\n  }),\n  methods: {\n    classError(value) {\n      if (this.errors[value]) {\n        return \"TextInput input-no-value-style\";\n      }\n\n      return \"TextInput\";\n    },\n\n    checkQuestion() {\n      this.errors = {};\n      let error = false;\n      let msg = \"\";\n\n      if (this.Options.min == \"\" || this.Options.max == \"\" || this.Options.maxFractionDigits == \"\" || this.Options.unit == \"\") {\n        error = true;\n        msg = \"The fields can't be blank\";\n        this.errors['min'] = this.Options.min == \"\";\n        this.errors['max'] = this.Options.max == \"\";\n        this.errors['maxFraction'] = this.Options.maxFractionDigits == \"\";\n        this.errors['unit'] = this.Options.unit == \"\";\n        console.log(\"errors\", this.Options);\n      } else {\n        let min = parseInt(this.Options.min);\n        let max = parseInt(this.Options.max);\n\n        if (min > max) {\n          error = true;\n          msg = \"Min value must be lower than max value\";\n          this.errors['min'] = true;\n        }\n      }\n\n      return {\n        \"error\": error,\n        \"msg\": msg\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/surveys/SurveyBuilder/questionsTypes/Integer.vue"],"names":[],"mappings":"AA6CA,eAAe;EACb,KAAK,EAAE;IACL,OAAO,EAAE;EADJ,CADM;EAIb,IAAI,EAAC,OAAO;IACV,MAAM,EAAC;EADG,CAAP,CAJQ;EAOb,OAAO,EAAC;IACN,UAAU,CAAC,KAAD,EAAO;MACf,IAAG,KAAK,MAAL,CAAY,KAAZ,CAAH,EAAsB;QACpB,OAAO,gCAAP;MACF;;MACA,OAAO,WAAP;IACD,CANK;;IAON,aAAa,GAAE;MACb,KAAK,MAAL,GAAY,EAAZ;MACA,IAAI,KAAI,GAAI,KAAZ;MACA,IAAI,GAAE,GAAI,EAAV;;MAEA,IAAG,KAAK,OAAL,CAAa,GAAb,IAAoB,EAApB,IAA0B,KAAK,OAAL,CAAa,GAAb,IAAoB,EAA9C,IAAoD,KAAK,OAAL,CAAa,iBAAb,IAAkC,EAAtF,IAA4F,KAAK,OAAL,CAAa,IAAb,IAAqB,EAApH,EAAuH;QACrH,KAAI,GAAI,IAAR;QACA,GAAE,GAAI,2BAAN;QACA,KAAK,MAAL,CAAY,KAAZ,IAAmB,KAAK,OAAL,CAAa,GAAb,IAAkB,EAArC;QACA,KAAK,MAAL,CAAY,KAAZ,IAAmB,KAAK,OAAL,CAAa,GAAb,IAAkB,EAArC;QACA,KAAK,MAAL,CAAY,aAAZ,IAA2B,KAAK,OAAL,CAAa,iBAAb,IAAgC,EAA3D;QACA,KAAK,MAAL,CAAY,MAAZ,IAAoB,KAAK,OAAL,CAAa,IAAb,IAAmB,EAAvC;QACA,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAqB,KAAK,OAA1B;MAEF,CATA,MAUI;QACF,IAAI,GAAE,GAAI,QAAQ,CAAC,KAAK,OAAL,CAAa,GAAd,CAAlB;QACA,IAAI,GAAE,GAAI,QAAQ,CAAC,KAAK,OAAL,CAAa,GAAd,CAAlB;;QAEA,IAAG,GAAG,GAAC,GAAP,EAAW;UACT,KAAI,GAAI,IAAR;UACA,GAAE,GAAI,wCAAN;UAEA,KAAK,MAAL,CAAY,KAAZ,IAAmB,IAAnB;QAEF;MACF;;MACA,OAAO;QAAC,SAAQ,KAAT;QAAe,OAAM;MAArB,CAAP;IACF;;EAnCM;AAPK,CAAf","sourcesContent":["<template>\n<div>\n    <label>Min: </label>\n      <input\n        v-model=\"Options.min\"\n        :name=\"`options[${Options.id}]`\"\n        type=\"number\"\n        class=\"TextInput\"\n        placeholder=\"1\"\n        min=\"0\"\n        :class=\"classError('min')\"        \n      />\n      <label>Max: </label>\n      <input\n        v-model=\"Options.max\"\n        :name=\"`options[${Options.id}]`\"\n        type=\"number\"\n        class=\"TextInput\"\n        placeholder=\"1\"\n        min=\"0\"\n        :class=\"classError('max')\"\n      />\n      <label>maxFractionDigits: </label>\n      <input\n        v-model=\"Options.maxFractionDigits\"\n        :name=\"`options[${Options.id}]`\"\n        type=\"number\"\n        class=\"TextInput\"\n        placeholder=\"1\"\n        min=\"0\"\n        :class=\"classError('maxFraction')\"\n      />\n      <label>Unit: </label>\n      <input\n        v-model=\"Options.unit\"\n        :name=\"`options[${Options.id}]`\"\n        type=\"text\"\n        class=\"TextInput\"\n        placeholder=\"meters\"\n        :class=\"classError('unit')\"\n      />\n</div>\n</template>\n\n<script>\nexport default {\n  props: {\n    Options: Object\n  },\n  data:() => ({\n    errors:{}\n  }),\n  methods:{\n    classError(value){\n      if(this.errors[value]){\n        return \"TextInput input-no-value-style\"\n      }\n      return \"TextInput\"\n    },\n    checkQuestion(){\n      this.errors={}\n      let error = false\n      let msg = \"\"\n\n      if(this.Options.min == \"\" || this.Options.max == \"\" || this.Options.maxFractionDigits == \"\" || this.Options.unit == \"\"){\n        error = true\n        msg = \"The fields can't be blank\"        \n        this.errors['min']=this.Options.min==\"\"\n        this.errors['max']=this.Options.max==\"\"\n        this.errors['maxFraction']=this.Options.maxFractionDigits==\"\"\n        this.errors['unit']=this.Options.unit==\"\"\n        console.log(\"errors\",this.Options)\n\n      }\n      else{\n        let min = parseInt(this.Options.min)\n        let max = parseInt(this.Options.max)\n\n        if(min>max){\n          error = true \n          msg = \"Min value must be lower than max value\"\n\n          this.errors['min']=true\n\n        }\n      }\n      return {\"error\":error,\"msg\":msg};\n    }\n  }\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}