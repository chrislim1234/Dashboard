{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_apexchart, {\n    ref: \"chart\",\n    type: \"scatter\",\n    height: \"250\",\n    options: $options.chartOptions,\n    series: $props.series\n  }, null, 8\n  /* PROPS */\n  , [\"options\", \"series\"])]);\n}","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/apexCharts/ScatterChart.vue"],"names":[],"mappings":";;;;uBACE,mBAAA,CAQM,KARN,EAQM,IARN,EAQM,CAPJ,YAAA,CAMa,oBANb,EAMa;IALX,GAAG,EAAC,OAKO;IAJX,IAAI,EAAC,SAIM;IAHX,MAAM,EAAC,KAGI;IAFV,OAAO,EAAE,QAAA,CAAA,YAEC;IADV,MAAM,EAAE,MAAA,CAAA;EACE,CANb,E,IAAA,E;;EAAA,E,qBAAA,CAOI,CARN,C","sourcesContent":["<template>\n  <div>\n    <apexchart\n      ref=\"chart\"\n      type=\"scatter\"\n      height=\"250\"\n      :options=\"chartOptions\"\n      :series=\"series\"\n    ></apexchart>\n  </div>\n</template>\n<script>\nimport VueApexCharts from \"vue3-apexcharts\";\nexport default {\n  components: {\n    apexchart: VueApexCharts,\n  },\n   methods: {\n    zoomX(fromDate, toDate) {\n      if (this.$refs.chart.chart) {\n        this.$refs.chart.zoomX(fromDate.getTime(), toDate.getTime());\n      }\n    },\n  },\n  props: {\n    labels: {\n      type: Array,\n      required: true,\n    },\n    series: {\n      type: Array,\n      required: true,\n    },\n  },\n  computed: {\n    chartOptions() {\n      return {\n        chart: {\n          height: 350,\n          type: \"scatter\",\n          zoom: {\n            type: \"xy\",\n          },\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n          },\n        },\n        grid: {\n          xaxis: {\n            lines: {\n              show: true,\n            },\n          },\n          yaxis: {\n            lines: {\n              show: true,\n            },\n          },\n        },\n        xaxis: {\n          type: \"datetime\",\n          labels: {\n            datetimeFormatter: {\n              year: 'yyyy',\n              month: 'MMM \\'yy',\n              day: 'MMM dd',\n              hour: 'HH:mm'\n            }\n          }\n        },\n        yaxis: {\n          show: true,\n          showAlways: true,\n          showForNullSeries: true,\n          opposite: false,\n          reversed: false,\n          logarithmic: false,\n          tickAmount: this.labels.length,\n          min: 0,\n          max: this.labels.length - 1,\n          forceNiceScale: true,\n          floating: false,\n          decimalsInFloat: 0,\n          labels: {\n            show: true,\n            align: \"right\",\n            minWidth: 0,\n            maxWidth: 160,\n            style: {\n              colors: [],\n              fontSize: \"12px\",\n              fontFamily: \"Helvetica, Arial, sans-serif\",\n              fontWeight: 400,\n              cssClass: \"apexcharts-yaxis-label\",\n            },\n            offsetX: 0,\n            offsetY: 0,\n            rotate: -45,\n            formatter: (value) => {\n              // return Math.floor( value )\n              return this.labels[Math.floor(value)];\n            },\n          },\n          axisBorder: {\n            show: true,\n            color: \"#78909C\",\n            offsetX: 0,\n            offsetY: 0,\n          },\n          axisTicks: {\n            show: true,\n            borderType: \"solid\",\n            color: \"#78909C\",\n            width: 5,\n            offsetX: 0,\n            offsetY: 0,\n          },\n        },\n      };\n    },\n  },\n};\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}