{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/Rest\";\nimport { objectToString } from \"@vue/shared\";\nexport const FetchUserHaveMyData = async ({\n  commit\n}) => {\n  let {\n    auth\n  } = require(\"@/plugins/firebase/firebase\");\n\n  auth.onAuthStateChanged(async function (user) {\n    console.log(user.uid);\n    let users = [];\n    const usersSnap = await request.GET(\"users_roles\").WHERE([\"users_access\", \"array-contains\", user.uid]).Execute();\n    usersSnap.forEach(user => {\n      users.push({\n        id: user.id,\n        ...user.data()\n      });\n    });\n    console.log(\"users\", users);\n    commit(\"saveUsersHaveMyData\", users);\n  });\n}; // .collection(\"users_roles\")\n// .where(\"users_access\", \"array-contains\", \"eetPw3yVxig1Mkcp7ltGUHSXOHa2\")\n\nexport const FetchUsersIHaveAccessTo = async ({\n  commit\n}) => {\n  let {\n    auth\n  } = require(\"@/plugins/firebase/firebase\");\n\n  auth.onAuthStateChanged(async function (user) {\n    let users = [];\n    const usersSnap = await request.GET(`users_roles/${user.uid}`).Execute();\n\n    if (usersSnap.data()[\"user_data\"]) {\n      for (const [key, value] of Object.entries(usersSnap.data()[\"user_data\"])) {\n        users.push({\n          id: key,\n          email: value.email,\n          studyId: value.studyId\n        });\n      }\n    }\n\n    commit(\"saveUserIHaveAccess\", users);\n  });\n};\nexport const FetchAllDoctorsAndSuperAdmin = async ({\n  commit\n}) => {\n  let {\n    auth\n  } = require(\"@/plugins/firebase/firebase\");\n\n  let users = [];\n  const usersSnap = await request.GET(\"users_roles\").WHERE([\"rol\", \"in\", ['doctor', 'superAdmin']]).Execute();\n  await auth.onAuthStateChanged(async function (user) {\n    usersSnap.forEach(admin => {\n      let push = true;\n\n      if (admin.data() && admin.data()[\"users_access\"]) {\n        if (admin.data()[\"users_access\"].includes(user.uid)) {\n          push = false;\n        }\n      }\n\n      if (push) {\n        users.push({\n          id: admin.id,\n          ...admin.data()\n        });\n      }\n    });\n    commit(\"saveDoctorsAdmin\", users);\n  });\n};\nexport const ShareMyData = async ({\n  commit\n}, {\n  userId,\n  studyId\n}) => {\n  return new Promise((resolve, reject) => {\n    let {\n      auth\n    } = require(\"@/plugins/firebase/firebase\");\n\n    auth.onAuthStateChanged(async function (user) {\n      const usersSnap = await request.GET(`users_roles/${userId}`).Execute();\n      const userDataSnap = await request.GET(`studies/${studyId}/users/${user.uid}`).Execute();\n      console.log(userDataSnap.data());\n      let email = userDataSnap.data()['email'];\n      let previousUserAccess = [];\n      let data = usersSnap.data();\n\n      if (data && data['users_access']) {\n        previousUserAccess = [...data['users_access']];\n      }\n\n      previousUserAccess.push(user.uid);\n      let previousUserData = {};\n\n      if (data && data['user_data']) {\n        previousUserData = { ...data['user_data']\n        };\n      }\n\n      previousUserData[user.uid] = {\n        'email': email,\n        'studyId': studyId\n      };\n      console.log('data', previousUserData);\n      await request.PUT(`/users_roles/${userId}/`, {\n        data: {\n          'users_access': previousUserAccess,\n          'user_data': previousUserData\n        }\n      }).Execute();\n      resolve();\n    });\n  });\n};\nexport const RemoveAccess = async ({\n  commit\n}, userId) => {\n  return new Promise((resolve, reject) => {\n    let {\n      auth\n    } = require(\"@/plugins/firebase/firebase\");\n\n    auth.onAuthStateChanged(async function (user) {\n      let previousUserAccess = [];\n      const usersSnap = await request.GET(`users_roles/${userId}`).Execute();\n      let data = usersSnap.data();\n\n      if (data && data['users_access']) {\n        previousUserAccess = [...data['users_access']];\n      }\n\n      var filteredAccess = previousUserAccess.filter(function (value, index, arr) {\n        return value != user.uid;\n      });\n      let userData = {};\n\n      if (data && data['user_data']) {\n        userData = { ...data['user_data']\n        };\n\n        if (userData[user.uid]) {\n          delete userData[user.uid];\n        }\n      }\n\n      await request.PUT(`/users_roles/${userId}/`, {\n        data: {\n          'users_access': filteredAccess,\n          'user_data': userData\n        }\n      }).Execute();\n      resolve();\n    });\n  });\n};","map":{"version":3,"names":["request","objectToString","FetchUserHaveMyData","commit","auth","require","onAuthStateChanged","user","console","log","uid","users","usersSnap","GET","WHERE","Execute","forEach","push","id","data","FetchUsersIHaveAccessTo","key","value","Object","entries","email","studyId","FetchAllDoctorsAndSuperAdmin","admin","includes","ShareMyData","userId","Promise","resolve","reject","userDataSnap","previousUserAccess","previousUserData","PUT","RemoveAccess","filteredAccess","filter","index","arr","userData"],"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/store/modules/share/actions.js"],"sourcesContent":["import request from \"@/Rest\"\nimport { objectToString } from \"@vue/shared\";\n\nexport const FetchUserHaveMyData = async ({ commit }) => {\n    let { auth } = require(\"@/plugins/firebase/firebase\");\n    auth.onAuthStateChanged(async function (user){\n        console.log(user.uid)\n        let users = []\n        const usersSnap = await request.GET(\"users_roles\").WHERE([\"users_access\", \"array-contains\", user.uid]).Execute()\n        usersSnap.forEach(user => {\n            users.push({\n                id: user.id,\n                ...user.data()\n            })\n        });\n        console.log(\"users\",users)\n        commit(\"saveUsersHaveMyData\",users)\n    })\n    \n}\n\n// .collection(\"users_roles\")\n// .where(\"users_access\", \"array-contains\", \"eetPw3yVxig1Mkcp7ltGUHSXOHa2\")\nexport const FetchUsersIHaveAccessTo = async ({commit}) =>{\n    let { auth } = require(\"@/plugins/firebase/firebase\");\n    auth.onAuthStateChanged(async function (user){\n        let users = []\n        const usersSnap = await request.GET(`users_roles/${user.uid}`).Execute()\n        if(usersSnap.data()[\"user_data\"]){\n            for(const [key,value] of Object.entries(usersSnap.data()[\"user_data\"])){\n                users.push({\n                    id:key,\n                    email:value.email,\n                    studyId:value.studyId\n                })\n            }\n        }\n        commit(\"saveUserIHaveAccess\",users)\n    })\n}\n\nexport const FetchAllDoctorsAndSuperAdmin = async ({commit})=>{\n    let { auth } = require(\"@/plugins/firebase/firebase\");\n    let users = []\n    const usersSnap = await request.GET(\"users_roles\").WHERE([\"rol\", \"in\",['doctor','superAdmin']]).Execute()\n    await auth.onAuthStateChanged(async function (user){\n        usersSnap.forEach(admin => {\n            let push=true\n            if( admin.data() && admin.data()[\"users_access\"]){\n                if (admin.data()[\"users_access\"].includes(user.uid)){\n                    push=false\n                }\n            }\n            if(push){\n                users.push({\n                    id: admin.id,\n                    ...admin.data()\n                })\n            }\n        \n        });\n        \n        commit(\"saveDoctorsAdmin\",users)\n    })\n}\n\nexport const ShareMyData = async ({commit},{userId,studyId})=>{\n    return new Promise((resolve,reject)=>{\n        let { auth } = require(\"@/plugins/firebase/firebase\");\n        auth.onAuthStateChanged(async function (user){\n            const usersSnap = await request.GET(`users_roles/${userId}`).Execute()\n            const userDataSnap = await request.GET(`studies/${studyId}/users/${user.uid}`).Execute()\n            console.log(userDataSnap.data())\n            let email = userDataSnap.data()['email']\n            let previousUserAccess = []\n            let data= usersSnap.data()\n            if (data && data['users_access']){\n                previousUserAccess = [...data['users_access']]\n            }\n            previousUserAccess.push(user.uid)\n\n            let previousUserData = {}\n           \n           if (data && data['user_data']){\n            previousUserData = { ...data['user_data']}\n           }\n           previousUserData[user.uid] = {\n               'email':email,\n               'studyId':studyId\n           }\n           console.log('data',previousUserData)\n            await request.PUT(`/users_roles/${userId}/`,{\n                data:{\n                    'users_access':previousUserAccess,\n                    'user_data':previousUserData\n                }\n            }).Execute()\n            resolve()\n        })\n        \n    })\n}\n\nexport const RemoveAccess = async({commit}, userId)=>{\n    return new Promise((resolve,reject)=>{\n        let { auth } = require(\"@/plugins/firebase/firebase\");\n        auth.onAuthStateChanged(async function (user){\n            let previousUserAccess = []\n            const usersSnap = await request.GET(`users_roles/${userId}`).Execute()\n            let data= usersSnap.data()\n            if (data && data['users_access']){\n                previousUserAccess = [...data['users_access']]\n            }\n            var filteredAccess = previousUserAccess.filter(function(value, index, arr){ \n                return value!=user.uid;\n            });\n            let userData = {}\n            if (data && data['user_data']){\n                userData = {...data['user_data']}\n                if(userData[user.uid]){\n                    delete userData[user.uid]\n                }\n                \n            }\n            await request.PUT(`/users_roles/${userId}/`,{\n                data:{\n                    'users_access':filteredAccess,\n                    'user_data':userData\n                }\n            }).Execute()\n            resolve()\n        })\n    })\n   \n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}