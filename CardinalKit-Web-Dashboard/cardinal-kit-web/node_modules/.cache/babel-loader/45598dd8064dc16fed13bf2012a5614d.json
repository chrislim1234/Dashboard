{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Checkbox from \"@/components/surveys/SurveyBuilder/questionsTypes/CheckBox\";\nimport Radio from \"@/components/surveys/SurveyBuilder/questionsTypes/Radio\";\nimport Scale from \"@/components/surveys/SurveyBuilder/questionsTypes/Scale\";\nimport Instruction from \"@/components/surveys/SurveyBuilder/questionsTypes/Instruction\";\nimport Text from \"@/components/surveys/SurveyBuilder/questionsTypes/Text\";\nimport TextArea from \"@/components/surveys/SurveyBuilder/questionsTypes/TextArea\";\nimport Signature from \"@/components/surveys/SurveyBuilder/questionsTypes/Signature\";\nimport Boolean from \"@/components/surveys/SurveyBuilder/questionsTypes/Boolean\";\nimport Date from \"@/components/surveys/SurveyBuilder/questionsTypes/Date\";\nimport Decimal from \"@/components/surveys/SurveyBuilder/questionsTypes/Decimal\";\nimport Email from \"@/components/surveys/SurveyBuilder/questionsTypes/Email\";\nimport Height from \"@/components/surveys/SurveyBuilder/questionsTypes/Height\";\nimport Integer from \"@/components/surveys/SurveyBuilder/questionsTypes/Integer\";\nimport Location from \"@/components/surveys/SurveyBuilder/questionsTypes/Location\";\nimport SocioEconomic from \"@/components/surveys/SurveyBuilder/questionsTypes/SocioEconomic\";\nimport TextScale from \"@/components/surveys/SurveyBuilder/questionsTypes/TextScale\";\nimport TimeInterval from \"@/components/surveys/SurveyBuilder/questionsTypes/TimeInterval\";\nimport TimeOfDay from \"@/components/surveys/SurveyBuilder/questionsTypes/TimeOfDay\";\nimport Weight from \"@/components/surveys/SurveyBuilder/questionsTypes/Weight\";\nimport AltSelect from \"@/components/multiSelect/Select\";\nimport { uuidv4 } from \"@/helpers\";\nexport default {\n  props: {\n    Survey: Object\n  },\n  components: {\n    AltSelect,\n    Checkbox,\n    Radio,\n    Scale,\n    Instruction,\n    Text,\n    TextArea,\n    Signature,\n    Boolean,\n    Date,\n    Decimal,\n    Email,\n    Height,\n    Integer,\n    Location,\n    SocioEconomic,\n    TextScale,\n    TimeInterval,\n    TimeOfDay,\n    Weight\n  },\n  data: () => ({\n    errors: {},\n    formQuestionTypes: [\"text\", \"textarea\", \"singleChoice\", \"multipleChoice\", \"scale\", \"boolean\", \"instruction\", \"signature\", \"date\", \"numeric\", \"email\", \"location\", \"textScale\", \"timeinterval\", \"timeofday\", \"height\", \"weight\", \"socioeconomic\"]\n  }),\n  methods: {\n    classError(value) {\n      if (this.errors[value]) {\n        return \"TextInput input-no-value-style\";\n      }\n\n      return \"TextInput\";\n    },\n\n    addFormQuestion() {\n      if (!this.Survey.question) {\n        this.Survey.question = [];\n      }\n\n      this.Survey.question.push({\n        id: uuidv4(),\n        type: \"\",\n        scope: \"public\",\n        identifier: \"\",\n        description: \"\",\n        question: \"\",\n        required: true,\n        options: []\n      });\n    },\n\n    deleteFormQuestion(index) {\n      this.Survey.question.splice(index, 1);\n    },\n\n    createFormQuestionOptions(type, index) {\n      switch (type) {\n        case 'singleChoice':\n          this.Survey.question[index].type = \"singleChoice\";\n          this.Survey.question[index].options = [{\n            text: \"\",\n            value: 0\n          }, {\n            text: \"\",\n            value: 1\n          }];\n          break;\n\n        case 'multipleChoice':\n          this.Survey.question[index].type = \"multipleChoice\";\n          this.Survey.question[index].options = [{\n            text: \"\",\n            value: 0\n          }, {\n            text: \"\",\n            value: 1\n          }];\n          break;\n\n        case \"boolean\":\n          this.Survey.question[index].yes = \"\";\n          this.Survey.question[index].no = \"\";\n          break;\n\n        case \"scale\":\n          this.Survey.question[index].min = \"\";\n          this.Survey.question[index].minValueDescription = \"\";\n          this.Survey.question[index].max = \"\";\n          this.Survey.question[index].maxValueDescription = \"\";\n          this.Survey.question[index].step = \"\";\n          this.Survey.question[index].default = \"\";\n          this.Survey.question[index].vertical = false;\n          break;\n\n        default:\n          this.Survey.question[index].options = [{}];\n\n          if (!this.Survey.question[index].options || !this.Survey.question[index].options.length) {\n            this.Survey.question[index].options = [{}];\n          }\n\n          break;\n      }\n    },\n\n    placeholderSetter(index) {\n      return \"Option \" + (index + 1);\n    },\n\n    checkQuestion() {\n      this.errors = {};\n      let isValid = true;\n      let msg = \"\";\n      console.log(\"value\", this.Survey.question);\n\n      for (const [key, value] of Object.entries(this.Survey.question)) {\n        if (value.question == \"\" || value.identifier == \"\") {\n          isValid = false;\n          msg = \"The fields can't be blank\";\n          this.errors[value.id + 'question'] = value.question == \"\";\n          this.errors[value.id + 'identifier'] = value.identifier == \"\";\n        }\n\n        console.log(\"value\", value);\n\n        if (!this.$refs[value.id] || !this.$refs[value.id].checkQuestion()) {\n          isValid = false;\n          msg = \"The fields can't be blank\";\n        }\n      }\n\n      if (this.Survey.question.length == 0) {\n        isValid = false;\n        msg = \"Please select at least one question \";\n      }\n\n      console.log(isValid, msg);\n      console.log(this.Survey.question);\n      return {\n        \"error\": !isValid,\n        \"msg\": msg\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/surveys/SurveyBuilder/questionsTypes/Form.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <form>\n    <div class=\"Form\">\n        <br />\n        <br />\n      <div class=\"form-row\" v-for=\"(question, index) in Survey.question\" :key=\"index\">\n        <div class=\"form-group col-md-6\">\n          <label>Select the type of question: </label>\n          <br />\n          <br />\n          <AltSelect\n            :defaultValue=\"question.type\"\n            :options=\"formQuestionTypes\"\n            v-model=\"question.type\"\n            :name=\"`questions[${index}][type]`\"\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Type of question\"\n            :onChange=\"\n              () => {\n                createFormQuestionOptions(question.type, index);\n              }\n            \"\n          />\n          <br />\n        </div>\n        <div\n          v-if=\"question.type != '' && question.type != null\"\n          class=\"form-group col-md-6\"\n        >\n          <label>Identifier: </label>\n          <input\n            v-model=\"question.identifier\"\n            :name=\"`questions[${index}][id]`\"\n            type=\"text\"\n            class=\"TextInput\"\n            placeholder=\"id\"\n            :class=\"classError(question.id+'identifier')\" \n          />\n        </div>\n\n        <div\n          v-if=\"question.type != '' && question.type != null\"\n        >\n          <input            \n            type=\"checkbox\"\n            v-model=\"question.required\"\n            :name=\"`questions[${index}][required]`\"\n            hidden\n          />\n        </div>      \n\n        <div\n          v-if=\"question.type != '' && question.type != null && question.type != 'form' && question.type != 'instruction'\"\n          class=\"form-group col-md-6\"\n        >\n          <br />\n          <label>Question: </label>\n          <input\n            \n            v-model=\"question.question\"\n            :name=\"`\n               questions[${index}][question]`\"\n            type=\"text\"\n            class=\"TextInput\"\n            placeholder=\"Question\"\n            :class=\"classError(question.id+'question')\"\n          />\n        </div>\n\n        <div v-if=\"question.type === 'scale'\" class=\"form-group col-md-6\">\n          <Scale :Options=\"question\"  :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\"question.type === 'boolean'\" class=\"form-group col-md-6\">\n          <Boolean :Options=\"question\" :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\" question.type === 'singleChoice' \" class=\"form-group col-md-6\" >\n          <br />\n          <Radio :Options=\"question.options\" :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\" question.type === 'multipleChoice' \" class=\"form-group col-md-6\" >\n          <br />\n          <Checkbox :Options=\"question.options\" :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\" question.type === 'instruction' \" class=\"form-group col-md-6\" >\n          <br />\n          <Instruction :Options=\"question.options\" :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\" question.type === 'text' \" class=\"form-group col-md-6\" >\n          <br />\n          <Text :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\" question.type === 'textarea' \" class=\"form-group col-md-6\" >\n          <br />\n          <TextArea :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\" question.type === 'signature' \" class=\"form-group col-md-6\" >\n          <br />\n          <Signature :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\"question.type === 'date'\" class=\"form-group col-md-6\">\n          <br />\n          <Date :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\"question.type === 'decimal'\" class=\"form-group col-md-6\">\n          <br />\n          <Decimal :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\"question.type === 'email'\" class=\"form-group col-md-6\">\n          <br />\n          <Email :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\"question.type === 'height'\" class=\"form-group col-md-6\">\n          <br />\n          <Height :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\"question.type === 'integer'\" class=\"form-group col-md-6\">\n          <br />\n          <Integer :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\"question.type === 'location'\" class=\"form-group col-md-6\">\n          <br />\n          <Location :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\"question.type === 'socioeconomic'\" class=\"form-group col-md-6\">\n          <br />\n          <SocioEconomic :ref=\"question.id\"  :Options=\"question.options\"/>\n        </div>\n\n        <div v-if=\"question.type === 'textscale'\" class=\"form-group col-md-6\">\n          <br />\n          <TextScale :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\"question.type === 'timeinterval'\" class=\"form-group col-md-6\">\n          <br />\n          <TimeInterval :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\"question.type === 'timeofday'\" class=\"form-group col-md-6\">\n          <br />\n          <TimeOfDay :ref=\"question.id\"/>\n        </div>\n\n        <div v-if=\"question.type === 'weight'\" class=\"form-group col-md-6\">\n          <br />\n          <Weight :ref=\"question.id\"/>\n        </div>\n\n        <br />\n        <br />\n\n        <button\n          @click=\"\n            () => {\n              deleteFormQuestion(index);\n            }\n          \"\n          type=\"button\"\n        >\n          Delete Form Question\n        </button>\n        <br />\n        <br />\n        <hr />\n      </div>\n      <div class=\"form-group\">\n        <button @click=\"addFormQuestion\" type=\"button\" class=\"btn btn-secondary\">\n          Add Form Question\n        </button>\n      </div>\n    </div>\n  </form>\n</template>\n\n<script>\n\nimport Checkbox from \"@/components/surveys/SurveyBuilder/questionsTypes/CheckBox\";\nimport Radio from \"@/components/surveys/SurveyBuilder/questionsTypes/Radio\";\nimport Scale from \"@/components/surveys/SurveyBuilder/questionsTypes/Scale\";\nimport Instruction from \"@/components/surveys/SurveyBuilder/questionsTypes/Instruction\";\nimport Text from \"@/components/surveys/SurveyBuilder/questionsTypes/Text\";\nimport TextArea from \"@/components/surveys/SurveyBuilder/questionsTypes/TextArea\";\nimport Signature from \"@/components/surveys/SurveyBuilder/questionsTypes/Signature\";\nimport Boolean from \"@/components/surveys/SurveyBuilder/questionsTypes/Boolean\";\nimport Date from \"@/components/surveys/SurveyBuilder/questionsTypes/Date\";\nimport Decimal from \"@/components/surveys/SurveyBuilder/questionsTypes/Decimal\";\nimport Email from \"@/components/surveys/SurveyBuilder/questionsTypes/Email\";\nimport Height from \"@/components/surveys/SurveyBuilder/questionsTypes/Height\";\nimport Integer from \"@/components/surveys/SurveyBuilder/questionsTypes/Integer\";\nimport Location from \"@/components/surveys/SurveyBuilder/questionsTypes/Location\";\nimport SocioEconomic from \"@/components/surveys/SurveyBuilder/questionsTypes/SocioEconomic\";\nimport TextScale from \"@/components/surveys/SurveyBuilder/questionsTypes/TextScale\";\nimport TimeInterval from \"@/components/surveys/SurveyBuilder/questionsTypes/TimeInterval\";\nimport TimeOfDay from \"@/components/surveys/SurveyBuilder/questionsTypes/TimeOfDay\";\nimport Weight from \"@/components/surveys/SurveyBuilder/questionsTypes/Weight\";\nimport AltSelect from \"@/components/multiSelect/Select\";\nimport { uuidv4 } from \"@/helpers\";\n\nexport default {\n  props: {\n    Survey: Object,\n  },\n  components: {\n    AltSelect,\n    Checkbox,\n    Radio,\n    Scale,\n    Instruction,\n    Text,\n    TextArea,\n    Signature,\n    Boolean,\n    Date,\n    Decimal,\n    Email,\n    Height,\n    Integer,\n    Location,\n    SocioEconomic,\n    TextScale,\n    TimeInterval,\n    TimeOfDay,\n    Weight\n  },\n\n  data: () => ({\n    errors:{},\n    formQuestionTypes: [\n      \"text\",\n      \"textarea\",\n      \"singleChoice\",\n      \"multipleChoice\",\n      \"scale\",\n      \"boolean\",\n      \"instruction\",\n      \"signature\",\n      \"date\",\n      \"numeric\",\n      \"email\",\n      \"location\",\n      \"textScale\",\n      \"timeinterval\",\n      \"timeofday\",\n      \"height\",\n      \"weight\",\n      \"socioeconomic\"\n    ],\n  }),\n\n  methods: {\n    classError(value){\n      if(this.errors[value]){\n        return \"TextInput input-no-value-style\"\n      }\n      return \"TextInput\"\n    },\n    addFormQuestion() {\n      if(!this.Survey.question){\n        this.Survey.question=[]\n      }\n      this.Survey.question.push({\n        id: uuidv4(),\n        type: \"\",\n        scope: \"public\",\n        identifier: \"\",\n        description: \"\",\n        question: \"\",\n        required: true,\n        options: [],\n      });\n    },\n\n    deleteFormQuestion(index) {\n      this.Survey.question.splice(index, 1);\n    },\n\n    createFormQuestionOptions(type, index) {\n      switch (type) {\n        case 'singleChoice':\n          this.Survey.question[index].type = \"singleChoice\"\n          this.Survey.question[index].options = [\n            { text: \"\", value: 0 },\n            { text: \"\", value: 1 },\n          ];\n          break;\n        case 'multipleChoice':\n          this.Survey.question[index].type = \"multipleChoice\"\n          this.Survey.question[index].options = [\n            { text: \"\", value: 0 },\n            { text: \"\", value: 1 },\n          ];\n          break;\n        case \"boolean\":\n          this.Survey.question[index].yes = \"\" \n          this.Survey.question[index].no = \"\" \n          break;\n        case \"scale\":\n         this.Survey.question[index].min = \"\"\n         this.Survey.question[index].minValueDescription = \"\"\n         this.Survey.question[index].max = \"\"\n         this.Survey.question[index].maxValueDescription = \"\"\n         this.Survey.question[index].step = \"\"\n         this.Survey.question[index].default = \"\"\n         this.Survey.question[index].vertical = false\n          break;\n        default:\n          this.Survey.question[index].options = [{}];\n          if (!this.Survey.question[index].options || !this.Survey.question[index].options.length){\n            this.Survey.question[index].options  = [{}];\n          }\n          break;\n      }\n    },\n    placeholderSetter(index) {\n      return \"Option \" + (index + 1);\n    },\n    checkQuestion(){\n      this.errors = {}\n      let isValid = true\n      let msg = \"\"\n      console.log(\"value\",this.Survey.question)\n      for(const [key,value] of Object.entries(this.Survey.question)){\n        if(value.question == \"\" || value.identifier == \"\"){\n          isValid = false\n          msg = \"The fields can't be blank\"\n          this.errors[value.id+'question']= value.question==\"\"\n          this.errors[value.id+'identifier']=value.identifier==\"\"\n        }\n        console.log(\"value\",value)\n        if(!this.$refs[value.id]  || !this.$refs[value.id].checkQuestion()){\n\n          \n\n\n          isValid=false\n          msg = \"The fields can't be blank\"\n        }\n      }\n      if(this.Survey.question.length==0){\n        isValid=false\n        msg = \"Please select at least one question \"\n      }\n      console.log(isValid,msg)\n      console.log(this.Survey.question)\n      return {\"error\":!isValid,\"msg\":msg};\n    }\n  },\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}