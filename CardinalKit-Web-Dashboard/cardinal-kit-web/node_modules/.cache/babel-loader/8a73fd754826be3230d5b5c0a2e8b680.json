{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-106e452e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"page\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"my-2\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-muted\"\n}, \"Survey\")], -1));\n\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"btn-content mt-2\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_modal = _resolveComponent(\"modal\");\n\n  const _component_alt_table = _resolveComponent(\"alt-table\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createVNode(_component_alt_table, {\n    columns: $data.columns,\n    pagination: \"\",\n    paginationOptions: $options.paginationOptions,\n    onOnPagination: $options.handlePagination\n  }, {\n    \"t-row\": _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getPageItems, survey => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: survey.data.identifier\n      }, [!survey.deleted ? (_openBlock(), _createElementBlock(\"td\", _hoisted_4, _toDisplayString(survey.data.title), 1)) : _createCommentVNode(\"\", true), !survey.deleted ? (_openBlock(), _createElementBlock(\"td\", _hoisted_5, [_createElementVNode(\"a\", {\n        class: \"button mr-1\",\n        onClick: $event => $options.details(survey.data.identifier)\n      }, \"Details\", 8, _hoisted_6), _createElementVNode(\"a\", {\n        class: \"button mr-1\",\n        onClick: $event => $options.edit(survey.data.identifier)\n      }, \"Edit\", 8, _hoisted_7), _createVNode(_component_modal, {\n        label: 'Remove',\n        name: survey.data.identifier,\n        title: \"Are you sure?\",\n        content: \"Do you want to delete the survey?\",\n        onAccept: $options.remove\n      }, null, 8, [\"name\", \"onAccept\"])])) : _createCommentVNode(\"\", true)]);\n    }), 128))]),\n    _: 1\n  }, 8, [\"columns\", \"paginationOptions\", \"onOnPagination\"]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.schedule && $options.schedule(...args))\n  }, \"Scheduler\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.create && $options.create(...args))\n  }, \"Create new survey\")]), _hoisted_9]);\n}","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/views/surveys/surveysList.vue"],"names":[],"mappings":";;;;;EACO,KAAK,EAAC;;;gEACT,mBAAA,CAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM,CAAA,CAAN,C;;gEACA,mBAAA,CAEM,KAFN,EAEM;EAFA,KAAK,EAAC;AAEN,CAFN,EAAkB,C,aAChB,mBAAA,CAAkC,IAAlC,EAAkC;EAA9B,KAAK,EAAC;AAAwB,CAAlC,EAAuB,QAAvB,CADgB,CAAlB,E,EAAA,C;;;;;;;;;;;EA0BM,KAAK,EAAC;;;gEAIZ,mBAAA,CAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM,CAAA,CAAN,C;;;;;;;uBAhCF,mBAAA,CAiCM,KAjCN,EAAA,UAAA,EAiCM,CAhCJ,UAgCI,EA/BJ,UA+BI,EA5BJ,YAAA,CAsBY,oBAtBZ,EAsBY;IAtBA,OAAO,EAAE,KAAA,CAAA,OAsBT;IAtBkB,UAAU,EAAV,EAsBlB;IArBT,iBAAiB,EAAE,QAAA,CAAA,iBAqBV;IApBT,cAAY,EAAE,QAAA,CAAA;EAoBL,CAtBZ,E;IAIW,SAAK,QAAA,CACV,MAA8B,E,kBAAlC,mBAAA,CAeK,SAfL,EAeK,IAfL,EAeK,WAAA,CAfgB,QAAA,CAAA,YAehB,EAfM,MAAsB,IAAhB;2BAAjB,mBAAA,CAeK,IAfL,EAeK;QAf+B,GAAG,EAAE,MAAM,CAAC,IAAP,CAAY;MAehD,CAfL,E,EACa,MAAM,CAAC,O,kBAAlB,mBAAA,CAEK,IAFL,EAEK,UAFL,EAEK,gBAAA,CADD,MAAM,CAAC,IAAP,CAAY,KACX,CAFL,EACqB,CADrB,C,oCAGW,MAAM,CAAC,O,kBAAlB,mBAAA,CAUK,IAVL,EAUK,UAVL,EAUK,CATH,mBAAA,CAA2E,GAA3E,EAA2E;QAAxE,KAAK,EAAC,aAAkE;QAAnD,OAAK,EAAA,MAAA,IAAE,QAAA,CAAA,OAAA,CAAQ,MAAM,CAAC,IAAP,CAAY,UAApB;MAA4C,CAA3E,EAAgE,SAAhE,EAAuE,CAAvE,EAAuE,UAAvE,CASG,EARH,mBAAA,CAAqE,GAArE,EAAqE;QAAlE,KAAK,EAAC,aAA4D;QAA7C,OAAK,EAAA,MAAA,IAAE,QAAA,CAAA,IAAA,CAAK,MAAM,CAAC,IAAP,CAAY,UAAjB;MAAsC,CAArE,EAA6D,MAA7D,EAAiE,CAAjE,EAAiE,UAAjE,CAQG,EAPH,YAAA,CAME,gBANF,EAME;QALC,KAAK,EAAE,QAKR;QAJC,IAAI,EAAE,MAAM,CAAC,IAAP,CAAY,UAInB;QAHA,KAAK,EAAC,eAGN;QAFA,OAAO,EAAC,mCAER;QADC,QAAM,EAAE,QAAA,CAAA;MACT,CANF,E,IAAA,E,CAAA,E,oBAAA,CAOG,CAVL,C,kCAJF,C;KAeK,CAfL,E,GAAA,CAAkC,EADpB,C;;GAJhB,E,CAAA,E,kDAAA,CA4BI,EALJ,mBAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFJ,mBAAA,CAA4C,QAA5C,EAA4C;IAAnC,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,IAAA,KAAE,QAAA,CAAA,QAAA,IAAA,QAAA,CAAA,QAAA,CAAA,GAAA,IAAA,CAAF;EAA8B,CAA5C,EAA0B,WAA1B,CAEI,EADJ,mBAAA,CAAkD,QAAlD,EAAkD;IAAzC,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,IAAA,KAAE,QAAA,CAAA,MAAA,IAAA,QAAA,CAAA,MAAA,CAAA,GAAA,IAAA,CAAF;EAAoC,CAAlD,EAAwB,mBAAxB,CACI,CAHN,CAKI,EADJ,UACI,CAjCN,C","sourcesContent":["<template>\n  <div class=\"page\">\n    <br />\n    <div  class=\"my-2\">\n      <h1 class=\"text-muted\">Survey</h1>\n    </div>\n    <alt-table :columns=\"columns\" pagination \n      :paginationOptions=\"paginationOptions\"\n      @onPagination=\"handlePagination\"\n    >\n    <template #t-row>\n      <tr v-for=\"survey in getPageItems\" :key=\"survey.data.identifier\">\n        <td v-if=\"!survey.deleted\">\n          {{survey.data.title}}\n        </td>\n        <td v-if=\"!survey.deleted\">\n          <a class=\"button mr-1\" @click=\"details(survey.data.identifier)\">Details</a>\n          <a class=\"button mr-1\" @click=\"edit(survey.data.identifier)\">Edit</a>\n          <modal\n            :label=\"'Remove'\"\n            :name=\"survey.data.identifier\"\n            title=\"Are you sure?\"\n            content=\"Do you want to delete the survey?\"\n            @accept=\"remove\"\n          />\n        </td>\n      </tr>\n    </template>\n    </alt-table>\n    <div  class=\"btn-content mt-2\">\n      <button @click=\"schedule\">Scheduler</button>\n      <button @click=\"create\">Create new survey</button>\n    </div>\n    <br />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport store from \"@/store\";\nimport altTable from '@/components/tables/altTable';\nimport modal from \"@/components/modals/modal.vue\"\n\nexport default {\n  name: \"SurveysList\",\n  data(){\n    return{\n      columns: [{ header: 'Name' }, { header: 'Action' }],\n      surveyData: [],\n      currentPage: 1,\n      limit: 10,\n    }\n  },\n  components: {\n    altTable,\n    modal\n  },\n  computed: {\n    ...mapGetters(\"user\", [\"getUserRol\",\"getUserId\"]),\n    ...mapGetters(\"surveys\",[\"getSurveysData\"]),\n    paginationOptions() {\n      return {\n        limit: [10, 20],\n        total: this.surveyData.length,\n        currentPage: this.currentPage,\n      };\n    },\n     getPageItems() {\n      if (this.surveyData){\n        let items = this.surveyData;\n        let lowerLimit = (this.currentPage - 1) * this.limit;\n        let upperLimit = this.currentPage * this.limit;\n        return items.slice(lowerLimit, upperLimit);\n      }\n      return {}\n    },\n  },\n  methods: {\n    ...mapActions(\"surveys\", [\"DeleteSurvey\", \"UpdateSurveyData\"]),\n    surveysListData(){\n      let data = []\n      \n      let list = this.getSurveysData(this.studyId)\n      for (const [key, value] of Object.entries(list)) {\n        data.push({...value, name: key})\n      }\n      this.surveyData = [...data]\n    },\n    remove(name) {\n      this.DeleteSurvey({\n      studyId: this.studyId,\n        surveyId: name,\n      }).then(()=>{\n        this.surveyData = this.surveyData.filter((obj) =>  obj.data.identifier != name )\n      })\n    },\n    create(){\n      this.$router.push(`/surveysBuilder/${this.studyId}/`)\n    },\n    edit(survey){\n      this.$router.push(`/edit/surveyBuilder/${this.studyId}/${survey}`)\n    },\n    details(survey) {\n      this.$router.push(`/surveyDetail/${this.studyId}/${survey}`)\n    },\n    schedule() {\n      this.$router.push(`/surveyScheduler/${this.studyId}`)\n    },\n    handlePagination(pagination) {\n      this.currentPage=pagination.currentPage\n      this.limit=pagination.limit\n      let total = this.surveyData.length\n      if(this.currentPage > Math.ceil(total/this.limit)){\n        this.currentPage = Math.ceil(total/this.limit)\n      }\n    },\n  },\n  props: {\n    studyId: {\n      type: String,\n      required: true,\n    }\n  },\n  created(){\n    this.surveysListData()\n  },\n  beforeRouteEnter(to, from, next) {\n    Promise.all([\n      store.dispatch(\"surveys/FetchAllSurveysData\",{studyId:to.params.studyId})])\n      .then(() => {\n      next();\n    });\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n  .btn-content {\n    margin-bottom: 10px;\n    margin-top: 10px;\n    display: flex;\n    justify-content: space-between;\n  }\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}