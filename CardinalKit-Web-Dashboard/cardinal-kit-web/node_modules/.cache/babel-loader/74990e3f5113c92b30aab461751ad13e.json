{"ast":null,"code":"import category from \"./categoryCard\";\nimport { CategoriesList } from '@/common/static_data';\nimport { mapGetters } from 'vuex';\nimport LineChart from \"@/components/apexCharts/LineChart\";\nimport AltDate from \"@/components/calendar/AltDate\";\nexport default {\n  name: \"categories\",\n  components: {\n    category,\n    CategoriesList,\n    LineChart,\n    AltDate\n  },\n\n  data() {\n    return {\n      date: {\n        startDate: new Date(new Date().setDate(-30))\n      },\n      categories: [],\n      userId: this.$route.query.userId,\n      studyId: this.$route.query.studyId,\n      filteredIndexData: [{\n        name: \"ActivityIndex\",\n        data: []\n      }]\n    };\n  },\n\n  methods: {\n    async handleChangeDate(value) {\n      if (value) {\n        if (this.getActivityIndexDataToGraphic[0]) {\n          let data = [...this.getActivityIndexDataToGraphic][0].data;\n          let startTimeStamp = value.startDate.getTime();\n          let endTimeStamp = value.endDate.getTime();\n          let finalData = data.filter(function (element) {\n            return element.x > startTimeStamp && element.x < endTimeStamp;\n          });\n          await new Promise(resolve => setTimeout(resolve, 10));\n          ;\n          this.filteredIndexData = [{\n            name: \"ActivityIndex\",\n            data: finalData\n          }];\n        }\n      }\n\n      this.$refs.chart.zoomX(value.startDate, value.endDate);\n    }\n\n  },\n  computed: { ...mapGetters(\"patient\", [\"getValidCategories\", \"getActivityIndexDataToGraphic\"]),\n\n    showActivityIndex() {\n      let show = false;\n\n      if (this.getActivityIndexDataToGraphic.length > 0) {\n        if (this.getActivityIndexDataToGraphic[0].data.length > 0) {\n          show = true;\n        }\n      }\n\n      return show;\n    },\n\n    filteredData() {\n      return [{\n        name: \"ActivityIndex\",\n        data: this.filteredIndexData[0].data\n      }];\n    }\n\n  },\n\n  created() {\n    this.categories = CategoriesList;\n    console.log(\"on\", this.getActivityIndexDataToGraphic);\n    this.filteredIndexData = [...this.getActivityIndexDataToGraphic];\n  }\n\n};","map":{"version":3,"sources":["/Users/chrislim/Desktop/USC/Senior Fall/CSCI401/CardinalKit-Web-Dashboard/cardinal-kit-web/src/components/patients/healthKit/categoryList.vue"],"names":[],"mappings":"AAmCA,OAAO,QAAP,MAAqB,gBAArB;AACA,SAAS,cAAT,QAA+B,sBAA/B;AACA,SAAS,UAAT,QAA2B,MAA3B;AACA,OAAO,SAAP,MAAsB,mCAAtB;AACA,OAAO,OAAP,MAAoB,+BAApB;AAEA,eAAe;EACb,IAAI,EAAE,YADO;EAEb,UAAU,EAAE;IACV,QADU;IAEV,cAFU;IAGV,SAHU;IAIV;EAJU,CAFC;;EAQb,IAAI,GAAE;IACJ,OAAM;MACJ,IAAI,EAAE;QAAE,SAAS,EAAE,IAAI,IAAJ,CAAS,IAAI,IAAJ,GAAW,OAAX,CAAmB,CAAC,EAApB,CAAT;MAAb,CADF;MAEJ,UAAU,EAAC,EAFP;MAGJ,MAAM,EAAE,KAAK,MAAL,CAAY,KAAZ,CAAkB,MAHtB;MAIJ,OAAO,EAAE,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAJvB;MAKJ,iBAAiB,EAAE,CAAE;QAAC,IAAI,EAAC,eAAN;QAAsB,IAAI,EAAC;MAA3B,CAAF;IALf,CAAN;EAOD,CAhBY;;EAiBb,OAAO,EAAE;IACP,MAAM,gBAAN,CAAuB,KAAvB,EAA8B;MAC5B,IAAG,KAAH,EAAS;QACP,IAAG,KAAK,6BAAL,CAAmC,CAAnC,CAAH,EAAyC;UACrC,IAAI,IAAG,GAAI,CAAC,GAAG,KAAK,6BAAT,EAAwC,CAAxC,EAA2C,IAAtD;UAED,IAAI,cAAa,GAAI,KAAK,CAAC,SAAN,CAAgB,OAAhB,EAArB;UACA,IAAI,YAAW,GAAI,KAAK,CAAC,OAAN,CAAc,OAAd,EAAnB;UAEA,IAAI,SAAQ,GAAI,IAAI,CAAC,MAAL,CAAY,UAAS,OAAT,EAAiB;YAC3C,OAAQ,OAAO,CAAC,CAAR,GAAY,cAAZ,IAA8B,OAAO,CAAC,CAAR,GAAY,YAAlD;UACD,CAFe,CAAhB;UAGA,MAAM,IAAI,OAAJ,CAAY,OAAM,IAAK,UAAU,CAAC,OAAD,EAAU,EAAV,CAAjC,CAAN;UAAsD;UACtD,KAAK,iBAAL,GAAuB,CAAE;YAAC,IAAI,EAAC,eAAN;YAAsB,IAAI,EAAC;UAA3B,CAAF,CAAvB;QAEH;MAEF;;MACA,KAAK,KAAL,CAAW,KAAX,CAAiB,KAAjB,CAAuB,KAAK,CAAC,SAA7B,EAAwC,KAAK,CAAC,OAA9C;IAEF;;EApBO,CAjBI;EAuCb,QAAQ,EAAE,EACR,GAAG,UAAU,CAAC,SAAD,EAAW,CAAC,oBAAD,EAAuB,+BAAvB,CAAX,CADL;;IAER,iBAAiB,GAAE;MACjB,IAAI,IAAG,GAAI,KAAX;;MACA,IAAG,KAAK,6BAAL,CAAmC,MAAnC,GAA0C,CAA7C,EAA+C;QAC7C,IAAG,KAAK,6BAAL,CAAmC,CAAnC,EAAsC,IAAtC,CAA2C,MAA3C,GAAkD,CAArD,EAAuD;UACrD,IAAI,GAAC,IAAL;QACF;MACF;;MACA,OAAO,IAAP;IACD,CAVO;;IAWR,YAAY,GAAE;MACZ,OAAO,CAAE;QAAC,IAAI,EAAC,eAAN;QAAsB,IAAI,EAAC,KAAK,iBAAL,CAAuB,CAAvB,EAA0B;MAArD,CAAF,CAAP;IACF;;EAbQ,CAvCG;;EAsDb,OAAO,GAAE;IACP,KAAK,UAAL,GAAkB,cAAlB;IACA,OAAO,CAAC,GAAR,CAAY,IAAZ,EAAiB,KAAK,6BAAtB;IACA,KAAK,iBAAL,GAAyB,CAAC,GAAG,KAAK,6BAAT,CAAzB;EACF;;AA1Da,CAAf","sourcesContent":["<template>\n  <div class=\"page\">\n    <div class=\"categories-grid\">\n      <category\n        v-for=\"category in categories\"\n        :data=\"category\"\n        :key=\"category.id\"\n        :userId=\"userId\"\n        :studyId=\"studyId\"\n        :icon=\"category.icon\"\n        v-show=\"getValidCategories.includes(category.id)\"\n      />\n    </div>\n    <div class=\"wrapper-graphs content\" v-if=\"showActivityIndex\">\n    <alt-date\n          withCalendar\n          :defaultDate=\"date\"\n          range\n          @update:model-value=\"handleChangeDate\"\n        />\n      <h1>Activity Index</h1>\n      <div >\n        <span >7-day moving avg (steps/day)</span>\n        <line-chart\n          ref=\"chart\"\n          id=\"line-chart\"\n          :key=\"1\"\n          :series=\"filteredData\"\n        />\n       \n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport category from \"./categoryCard\";\nimport { CategoriesList } from '@/common/static_data'\nimport { mapGetters } from 'vuex';\nimport LineChart from \"@/components/apexCharts/LineChart\";\nimport AltDate from \"@/components/calendar/AltDate\";\n\nexport default {\n  name: \"categories\",\n  components: {\n    category,\n    CategoriesList,\n    LineChart,\n    AltDate\n  },\n  data(){\n    return{\n      date: { startDate: new Date(new Date().setDate(-30)) },\n      categories:[],\n      userId: this.$route.query.userId,\n      studyId: this.$route.query.studyId,\n      filteredIndexData: [ {name:\"ActivityIndex\",data:[]} ]\n    }\n  },\n  methods: {\n    async handleChangeDate(value) {\n      if(value){        \n        if(this.getActivityIndexDataToGraphic[0]){\n            let data = [...this.getActivityIndexDataToGraphic][0].data\n\n           let startTimeStamp = value.startDate.getTime()\n           let endTimeStamp = value.endDate.getTime()\n\n           let finalData = data.filter(function(element){\n             return (element.x > startTimeStamp && element.x < endTimeStamp)\n           })\n           await new Promise(resolve => setTimeout(resolve, 10));;\n           this.filteredIndexData=[ {name:\"ActivityIndex\",data:finalData} ]\n\n        }\n        \n      }\n      this.$refs.chart.zoomX(value.startDate, value.endDate);\n      \n    }\n  },\n  computed: {\n    ...mapGetters(\"patient\",[\"getValidCategories\", \"getActivityIndexDataToGraphic\"]),\n    showActivityIndex(){\n      let show = false\n      if(this.getActivityIndexDataToGraphic.length>0){\n        if(this.getActivityIndexDataToGraphic[0].data.length>0){\n          show=true\n        }\n      }\n      return show\n    },\n    filteredData(){\n      return [ {name:\"ActivityIndex\",data:this.filteredIndexData[0].data} ]\n    }\n  },\n  created(){\n    this.categories = CategoriesList\n    console.log(\"on\",this.getActivityIndexDataToGraphic)\n    this.filteredIndexData = [...this.getActivityIndexDataToGraphic]\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .width {\n    min-width: 340px;\n    max-width: 500px;\n  }\n  .box {\n    flex-wrap: wrap;\n  }\n  .categories-grid {\n    display: grid;\n    gap: 20px 40px;\n    grid-template-columns: repeat(2, minmax(300px, 1fr));\n    justify-content: center;\n    align-items: center;\n  }\n  .wrapper-graphs {\n    display: grid;\n    gap: 15px;\n    max-width: 1200px;\n    margin: auto;\n  }\n  @media (max-width: 360px) {\n    .content{\n      padding: 1rem;\n    }\n  }\n  @media (min-width: 361px) {\n    .content{\n      padding: 1rem 4rem;\n    }\n  }\n  @media (max-width: 672px) {\n    .categories-grid {\n      display: grid;\n      gap: 20px 40px;\n    }\n  }\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}